{"version":3,"file":"dashboard/js/dashboard.06432bf1802e579853da.bundle.js","mappings":"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","sources":["webpack://ahmed/./node_modules/jose/dist/browser/lib/buffer_utils.js","webpack://ahmed/./node_modules/jose/dist/browser/runtime/base64url.js","webpack://ahmed/./node_modules/jose/dist/browser/util/errors.js","webpack://ahmed/./node_modules/jose/dist/browser/runtime/webcrypto.js","webpack://ahmed/./node_modules/jose/dist/browser/lib/crypto_key.js","webpack://ahmed/./node_modules/jose/dist/browser/lib/invalid_key_input.js","webpack://ahmed/./node_modules/jose/dist/browser/runtime/is_key_like.js","webpack://ahmed/./node_modules/jose/dist/browser/lib/is_object.js","webpack://ahmed/./node_modules/jose/dist/browser/lib/is_jwk.js","webpack://ahmed/./node_modules/jose/dist/browser/runtime/jwk_to_key.js","webpack://ahmed/./node_modules/jose/dist/browser/runtime/normalize_key.js","webpack://ahmed/./node_modules/jose/dist/browser/runtime/verify.js","webpack://ahmed/./node_modules/jose/dist/browser/runtime/get_sign_verify_key.js","webpack://ahmed/./node_modules/jose/dist/browser/runtime/check_key_length.js","webpack://ahmed/./node_modules/jose/dist/browser/runtime/subtle_dsa.js","webpack://ahmed/./node_modules/jose/dist/browser/lib/is_disjoint.js","webpack://ahmed/./node_modules/jose/dist/browser/lib/check_key_type.js","webpack://ahmed/./node_modules/jose/dist/browser/lib/validate_crit.js","webpack://ahmed/./node_modules/jose/dist/browser/lib/validate_algorithms.js","webpack://ahmed/./node_modules/jose/dist/browser/jws/flattened/verify.js","webpack://ahmed/./node_modules/jose/dist/browser/key/import.js","webpack://ahmed/./node_modules/jose/dist/browser/lib/epoch.js","webpack://ahmed/./node_modules/jose/dist/browser/lib/secs.js","webpack://ahmed/./node_modules/jose/dist/browser/lib/jwt_claims_set.js","webpack://ahmed/./node_modules/jose/dist/browser/jwt/verify.js","webpack://ahmed/./node_modules/jose/dist/browser/jws/compact/verify.js","webpack://ahmed/./src/assets/js/dashboard.js"],"sourcesContent":["import digest from '../runtime/digest.js';\nexport const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nexport function concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    for (const buffer of buffers) {\n        buf.set(buffer, i);\n        i += buffer.length;\n    }\n    return buf;\n}\nexport function p2s(alg, p2sInput) {\n    return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nexport function uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nexport function uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\nexport function lengthAndInput(input) {\n    return concat(uint32be(input.length), input);\n}\nexport async function concatKdf(secret, bits, value) {\n    const iterations = Math.ceil((bits >> 3) / 32);\n    const res = new Uint8Array(iterations * 32);\n    for (let iter = 0; iter < iterations; iter++) {\n        const buf = new Uint8Array(4 + secret.length + value.length);\n        buf.set(uint32be(iter + 1));\n        buf.set(secret, 4);\n        buf.set(value, 4 + secret.length);\n        res.set(await digest('sha256', buf), iter * 32);\n    }\n    return res.slice(0, bits >> 3);\n}\n","import { encoder, decoder } from '../lib/buffer_utils.js';\nexport const encodeBase64 = (input) => {\n    let unencoded = input;\n    if (typeof unencoded === 'string') {\n        unencoded = encoder.encode(unencoded);\n    }\n    const CHUNK_SIZE = 0x8000;\n    const arr = [];\n    for (let i = 0; i < unencoded.length; i += CHUNK_SIZE) {\n        arr.push(String.fromCharCode.apply(null, unencoded.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join(''));\n};\nexport const encode = (input) => {\n    return encodeBase64(input).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n};\nexport const decodeBase64 = (encoded) => {\n    const binary = atob(encoded);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n};\nexport const decode = (input) => {\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = decoder.decode(encoded);\n    }\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\n    try {\n        return decodeBase64(encoded);\n    }\n    catch {\n        throw new TypeError('The input to be decoded is not correctly encoded.');\n    }\n};\n","export class JOSEError extends Error {\n    static get code() {\n        return 'ERR_JOSE_GENERIC';\n    }\n    constructor(message) {\n        super(message);\n        this.code = 'ERR_JOSE_GENERIC';\n        this.name = this.constructor.name;\n        Error.captureStackTrace?.(this, this.constructor);\n    }\n}\nexport class JWTClaimValidationFailed extends JOSEError {\n    static get code() {\n        return 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n    }\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n        this.claim = claim;\n        this.reason = reason;\n        this.payload = payload;\n    }\n}\nexport class JWTExpired extends JOSEError {\n    static get code() {\n        return 'ERR_JWT_EXPIRED';\n    }\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.code = 'ERR_JWT_EXPIRED';\n        this.claim = claim;\n        this.reason = reason;\n        this.payload = payload;\n    }\n}\nexport class JOSEAlgNotAllowed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n    static get code() {\n        return 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n}\nexport class JOSENotSupported extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_NOT_SUPPORTED';\n    }\n    static get code() {\n        return 'ERR_JOSE_NOT_SUPPORTED';\n    }\n}\nexport class JWEDecryptionFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_DECRYPTION_FAILED';\n        this.message = 'decryption operation failed';\n    }\n    static get code() {\n        return 'ERR_JWE_DECRYPTION_FAILED';\n    }\n}\nexport class JWEInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWE_INVALID';\n    }\n}\nexport class JWSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWS_INVALID';\n    }\n}\nexport class JWTInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWT_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWT_INVALID';\n    }\n}\nexport class JWKInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWK_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWK_INVALID';\n    }\n}\nexport class JWKSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWKS_INVALID';\n    }\n}\nexport class JWKSNoMatchingKey extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_NO_MATCHING_KEY';\n        this.message = 'no applicable key found in the JSON Web Key Set';\n    }\n    static get code() {\n        return 'ERR_JWKS_NO_MATCHING_KEY';\n    }\n}\nexport class JWKSMultipleMatchingKeys extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n        this.message = 'multiple matching keys found in the JSON Web Key Set';\n    }\n    static get code() {\n        return 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    }\n}\nSymbol.asyncIterator;\nexport class JWKSTimeout extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_TIMEOUT';\n        this.message = 'request timed out';\n    }\n    static get code() {\n        return 'ERR_JWKS_TIMEOUT';\n    }\n}\nexport class JWSSignatureVerificationFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n        this.message = 'signature verification failed';\n    }\n    static get code() {\n        return 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    }\n}\n","export default crypto;\nexport const isCryptoKey = (key) => key instanceof CryptoKey;\n","function unusable(name, prop = 'algorithm.name') {\n    return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);\n}\nfunction isAlgorithm(algorithm, name) {\n    return algorithm.name === name;\n}\nfunction getHashLength(hash) {\n    return parseInt(hash.name.slice(4), 10);\n}\nfunction getNamedCurve(alg) {\n    switch (alg) {\n        case 'ES256':\n            return 'P-256';\n        case 'ES384':\n            return 'P-384';\n        case 'ES512':\n            return 'P-521';\n        default:\n            throw new Error('unreachable');\n    }\n}\nfunction checkUsage(key, usages) {\n    if (usages.length && !usages.some((expected) => key.usages.includes(expected))) {\n        let msg = 'CryptoKey does not support this operation, its usages must include ';\n        if (usages.length > 2) {\n            const last = usages.pop();\n            msg += `one of ${usages.join(', ')}, or ${last}.`;\n        }\n        else if (usages.length === 2) {\n            msg += `one of ${usages[0]} or ${usages[1]}.`;\n        }\n        else {\n            msg += `${usages[0]}.`;\n        }\n        throw new TypeError(msg);\n    }\n}\nexport function checkSigCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512': {\n            if (!isAlgorithm(key.algorithm, 'HMAC'))\n                throw unusable('HMAC');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'RS256':\n        case 'RS384':\n        case 'RS512': {\n            if (!isAlgorithm(key.algorithm, 'RSASSA-PKCS1-v1_5'))\n                throw unusable('RSASSA-PKCS1-v1_5');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'PS256':\n        case 'PS384':\n        case 'PS512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-PSS'))\n                throw unusable('RSA-PSS');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'EdDSA': {\n            if (key.algorithm.name !== 'Ed25519' && key.algorithm.name !== 'Ed448') {\n                throw unusable('Ed25519 or Ed448');\n            }\n            break;\n        }\n        case 'ES256':\n        case 'ES384':\n        case 'ES512': {\n            if (!isAlgorithm(key.algorithm, 'ECDSA'))\n                throw unusable('ECDSA');\n            const expected = getNamedCurve(alg);\n            const actual = key.algorithm.namedCurve;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.namedCurve');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\nexport function checkEncCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM': {\n            if (!isAlgorithm(key.algorithm, 'AES-GCM'))\n                throw unusable('AES-GCM');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (!isAlgorithm(key.algorithm, 'AES-KW'))\n                throw unusable('AES-KW');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'ECDH': {\n            switch (key.algorithm.name) {\n                case 'ECDH':\n                case 'X25519':\n                case 'X448':\n                    break;\n                default:\n                    throw unusable('ECDH, X25519, or X448');\n            }\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW':\n            if (!isAlgorithm(key.algorithm, 'PBKDF2'))\n                throw unusable('PBKDF2');\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-OAEP'))\n                throw unusable('RSA-OAEP');\n            const expected = parseInt(alg.slice(9), 10) || 1;\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\n","function message(msg, actual, ...types) {\n    types = types.filter(Boolean);\n    if (types.length > 2) {\n        const last = types.pop();\n        msg += `one of type ${types.join(', ')}, or ${last}.`;\n    }\n    else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}.`;\n    }\n    else {\n        msg += `of type ${types[0]}.`;\n    }\n    if (actual == null) {\n        msg += ` Received ${actual}`;\n    }\n    else if (typeof actual === 'function' && actual.name) {\n        msg += ` Received function ${actual.name}`;\n    }\n    else if (typeof actual === 'object' && actual != null) {\n        if (actual.constructor?.name) {\n            msg += ` Received an instance of ${actual.constructor.name}`;\n        }\n    }\n    return msg;\n}\nexport default (actual, ...types) => {\n    return message('Key must be ', actual, ...types);\n};\nexport function withAlg(alg, actual, ...types) {\n    return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}\n","import { isCryptoKey } from './webcrypto.js';\nexport default (key) => {\n    if (isCryptoKey(key)) {\n        return true;\n    }\n    return key?.[Symbol.toStringTag] === 'KeyObject';\n};\nexport const types = ['CryptoKey'];\n","function isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nexport default function isObject(input) {\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n}\n","import isObject from './is_object.js';\nexport function isJWK(key) {\n    return isObject(key) && typeof key.kty === 'string';\n}\nexport function isPrivateJWK(key) {\n    return key.kty !== 'oct' && typeof key.d === 'string';\n}\nexport function isPublicJWK(key) {\n    return key.kty !== 'oct' && typeof key.d === 'undefined';\n}\nexport function isSecretJWK(key) {\n    return isJWK(key) && key.kty === 'oct' && typeof key.k === 'string';\n}\n","import crypto from './webcrypto.js';\nimport { JOSENotSupported } from '../util/errors.js';\nfunction subtleMapping(jwk) {\n    let algorithm;\n    let keyUsages;\n    switch (jwk.kty) {\n        case 'RSA': {\n            switch (jwk.alg) {\n                case 'PS256':\n                case 'PS384':\n                case 'PS512':\n                    algorithm = { name: 'RSA-PSS', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RS256':\n                case 'RS384':\n                case 'RS512':\n                    algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RSA-OAEP':\n                case 'RSA-OAEP-256':\n                case 'RSA-OAEP-384':\n                case 'RSA-OAEP-512':\n                    algorithm = {\n                        name: 'RSA-OAEP',\n                        hash: `SHA-${parseInt(jwk.alg.slice(-3), 10) || 1}`,\n                    };\n                    keyUsages = jwk.d ? ['decrypt', 'unwrapKey'] : ['encrypt', 'wrapKey'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'EC': {\n            switch (jwk.alg) {\n                case 'ES256':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES384':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES512':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: 'ECDH', namedCurve: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'OKP': {\n            switch (jwk.alg) {\n                case 'EdDSA':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"kty\" (Key Type) Parameter value');\n    }\n    return { algorithm, keyUsages };\n}\nconst parse = async (jwk) => {\n    if (!jwk.alg) {\n        throw new TypeError('\"alg\" argument is required when \"jwk.alg\" is not present');\n    }\n    const { algorithm, keyUsages } = subtleMapping(jwk);\n    const rest = [\n        algorithm,\n        jwk.ext ?? false,\n        jwk.key_ops ?? keyUsages,\n    ];\n    const keyData = { ...jwk };\n    delete keyData.alg;\n    delete keyData.use;\n    return crypto.subtle.importKey('jwk', keyData, ...rest);\n};\nexport default parse;\n","import { isJWK } from '../lib/is_jwk.js';\nimport { decode } from './base64url.js';\nimport importJWK from './jwk_to_key.js';\nconst exportKeyValue = (k) => decode(k);\nlet privCache;\nlet pubCache;\nconst isKeyObject = (key) => {\n    return key?.[Symbol.toStringTag] === 'KeyObject';\n};\nconst importAndCache = async (cache, key, jwk, alg, freeze = false) => {\n    let cached = cache.get(key);\n    if (cached?.[alg]) {\n        return cached[alg];\n    }\n    const cryptoKey = await importJWK({ ...jwk, alg });\n    if (freeze)\n        Object.freeze(key);\n    if (!cached) {\n        cache.set(key, { [alg]: cryptoKey });\n    }\n    else {\n        cached[alg] = cryptoKey;\n    }\n    return cryptoKey;\n};\nconst normalizePublicKey = (key, alg) => {\n    if (isKeyObject(key)) {\n        let jwk = key.export({ format: 'jwk' });\n        delete jwk.d;\n        delete jwk.dp;\n        delete jwk.dq;\n        delete jwk.p;\n        delete jwk.q;\n        delete jwk.qi;\n        if (jwk.k) {\n            return exportKeyValue(jwk.k);\n        }\n        pubCache || (pubCache = new WeakMap());\n        return importAndCache(pubCache, key, jwk, alg);\n    }\n    if (isJWK(key)) {\n        if (key.k)\n            return decode(key.k);\n        pubCache || (pubCache = new WeakMap());\n        const cryptoKey = importAndCache(pubCache, key, key, alg, true);\n        return cryptoKey;\n    }\n    return key;\n};\nconst normalizePrivateKey = (key, alg) => {\n    if (isKeyObject(key)) {\n        let jwk = key.export({ format: 'jwk' });\n        if (jwk.k) {\n            return exportKeyValue(jwk.k);\n        }\n        privCache || (privCache = new WeakMap());\n        return importAndCache(privCache, key, jwk, alg);\n    }\n    if (isJWK(key)) {\n        if (key.k)\n            return decode(key.k);\n        privCache || (privCache = new WeakMap());\n        const cryptoKey = importAndCache(privCache, key, key, alg, true);\n        return cryptoKey;\n    }\n    return key;\n};\nexport default { normalizePublicKey, normalizePrivateKey };\n","import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getVerifyKey from './get_sign_verify_key.js';\nconst verify = async (alg, key, signature, data) => {\n    const cryptoKey = await getVerifyKey(alg, key, 'verify');\n    checkKeyLength(alg, cryptoKey);\n    const algorithm = subtleAlgorithm(alg, cryptoKey.algorithm);\n    try {\n        return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);\n    }\n    catch {\n        return false;\n    }\n};\nexport default verify;\n","import crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkSigCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nimport normalize from './normalize_key.js';\nexport default async function getCryptoKey(alg, key, usage) {\n    if (usage === 'sign') {\n        key = await normalize.normalizePrivateKey(key, alg);\n    }\n    if (usage === 'verify') {\n        key = await normalize.normalizePublicKey(key, alg);\n    }\n    if (isCryptoKey(key)) {\n        checkSigCryptoKey(key, alg, usage);\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        if (!alg.startsWith('HS')) {\n            throw new TypeError(invalidKeyInput(key, ...types));\n        }\n        return crypto.subtle.importKey('raw', key, { hash: `SHA-${alg.slice(-3)}`, name: 'HMAC' }, false, [usage]);\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array', 'JSON Web Key'));\n}\n","export default (alg, key) => {\n    if (alg.startsWith('RS') || alg.startsWith('PS')) {\n        const { modulusLength } = key.algorithm;\n        if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n            throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\n        }\n    }\n};\n","import { JOSENotSupported } from '../util/errors.js';\nexport default function subtleDsa(alg, algorithm) {\n    const hash = `SHA-${alg.slice(-3)}`;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n            return { hash, name: 'HMAC' };\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            return { hash, name: 'RSA-PSS', saltLength: alg.slice(-3) >> 3 };\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            return { hash, name: 'RSASSA-PKCS1-v1_5' };\n        case 'ES256':\n        case 'ES384':\n        case 'ES512':\n            return { hash, name: 'ECDSA', namedCurve: algorithm.namedCurve };\n        case 'EdDSA':\n            return { name: algorithm.name };\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n","const isDisjoint = (...headers) => {\n    const sources = headers.filter(Boolean);\n    if (sources.length === 0 || sources.length === 1) {\n        return true;\n    }\n    let acc;\n    for (const header of sources) {\n        const parameters = Object.keys(header);\n        if (!acc || acc.size === 0) {\n            acc = new Set(parameters);\n            continue;\n        }\n        for (const parameter of parameters) {\n            if (acc.has(parameter)) {\n                return false;\n            }\n            acc.add(parameter);\n        }\n    }\n    return true;\n};\nexport default isDisjoint;\n","import { withAlg as invalidKeyInput } from './invalid_key_input.js';\nimport isKeyLike, { types } from '../runtime/is_key_like.js';\nimport * as jwk from './is_jwk.js';\nconst tag = (key) => key?.[Symbol.toStringTag];\nconst jwkMatchesOp = (alg, key, usage) => {\n    if (key.use !== undefined && key.use !== 'sig') {\n        throw new TypeError('Invalid key for this operation, when present its use must be sig');\n    }\n    if (key.key_ops !== undefined && key.key_ops.includes?.(usage) !== true) {\n        throw new TypeError(`Invalid key for this operation, when present its key_ops must include ${usage}`);\n    }\n    if (key.alg !== undefined && key.alg !== alg) {\n        throw new TypeError(`Invalid key for this operation, when present its alg must be ${alg}`);\n    }\n    return true;\n};\nconst symmetricTypeCheck = (alg, key, usage, allowJwk) => {\n    if (key instanceof Uint8Array)\n        return;\n    if (allowJwk && jwk.isJWK(key)) {\n        if (jwk.isSecretJWK(key) && jwkMatchesOp(alg, key, usage))\n            return;\n        throw new TypeError(`JSON Web Key for symmetric algorithms must have JWK \"kty\" (Key Type) equal to \"oct\" and the JWK \"k\" (Key Value) present`);\n    }\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types, 'Uint8Array', allowJwk ? 'JSON Web Key' : null));\n    }\n    if (key.type !== 'secret') {\n        throw new TypeError(`${tag(key)} instances for symmetric algorithms must be of type \"secret\"`);\n    }\n};\nconst asymmetricTypeCheck = (alg, key, usage, allowJwk) => {\n    if (allowJwk && jwk.isJWK(key)) {\n        switch (usage) {\n            case 'sign':\n                if (jwk.isPrivateJWK(key) && jwkMatchesOp(alg, key, usage))\n                    return;\n                throw new TypeError(`JSON Web Key for this operation be a private JWK`);\n            case 'verify':\n                if (jwk.isPublicJWK(key) && jwkMatchesOp(alg, key, usage))\n                    return;\n                throw new TypeError(`JSON Web Key for this operation be a public JWK`);\n        }\n    }\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types, allowJwk ? 'JSON Web Key' : null));\n    }\n    if (key.type === 'secret') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithms must not be of type \"secret\"`);\n    }\n    if (usage === 'sign' && key.type === 'public') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm signing must be of type \"private\"`);\n    }\n    if (usage === 'decrypt' && key.type === 'public') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm decryption must be of type \"private\"`);\n    }\n    if (key.algorithm && usage === 'verify' && key.type === 'private') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm verifying must be of type \"public\"`);\n    }\n    if (key.algorithm && usage === 'encrypt' && key.type === 'private') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm encryption must be of type \"public\"`);\n    }\n};\nfunction checkKeyType(allowJwk, alg, key, usage) {\n    const symmetric = alg.startsWith('HS') ||\n        alg === 'dir' ||\n        alg.startsWith('PBES2') ||\n        /^A\\d{3}(?:GCM)?KW$/.test(alg);\n    if (symmetric) {\n        symmetricTypeCheck(alg, key, usage, allowJwk);\n    }\n    else {\n        asymmetricTypeCheck(alg, key, usage, allowJwk);\n    }\n}\nexport default checkKeyType.bind(undefined, false);\nexport const checkKeyTypeWithJwk = checkKeyType.bind(undefined, true);\n","import { JOSENotSupported } from '../util/errors.js';\nfunction validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {\n    if (joseHeader.crit !== undefined && protectedHeader?.crit === undefined) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n    }\n    if (!protectedHeader || protectedHeader.crit === undefined) {\n        return new Set();\n    }\n    if (!Array.isArray(protectedHeader.crit) ||\n        protectedHeader.crit.length === 0 ||\n        protectedHeader.crit.some((input) => typeof input !== 'string' || input.length === 0)) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n    }\n    let recognized;\n    if (recognizedOption !== undefined) {\n        recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);\n    }\n    else {\n        recognized = recognizedDefault;\n    }\n    for (const parameter of protectedHeader.crit) {\n        if (!recognized.has(parameter)) {\n            throw new JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n        }\n        if (joseHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n        }\n        if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n        }\n    }\n    return new Set(protectedHeader.crit);\n}\nexport default validateCrit;\n","const validateAlgorithms = (option, algorithms) => {\n    if (algorithms !== undefined &&\n        (!Array.isArray(algorithms) || algorithms.some((s) => typeof s !== 'string'))) {\n        throw new TypeError(`\"${option}\" option must be an array of strings`);\n    }\n    if (!algorithms) {\n        return undefined;\n    }\n    return new Set(algorithms);\n};\nexport default validateAlgorithms;\n","import { decode as base64url } from '../../runtime/base64url.js';\nimport verify from '../../runtime/verify.js';\nimport { JOSEAlgNotAllowed, JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport { concat, encoder, decoder } from '../../lib/buffer_utils.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport { checkKeyTypeWithJwk } from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nimport { isJWK } from '../../lib/is_jwk.js';\nimport { importJWK } from '../../key/import.js';\nexport async function flattenedVerify(jws, key, options) {\n    if (!isObject(jws)) {\n        throw new JWSInvalid('Flattened JWS must be an object');\n    }\n    if (jws.protected === undefined && jws.header === undefined) {\n        throw new JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\n    }\n    if (jws.protected !== undefined && typeof jws.protected !== 'string') {\n        throw new JWSInvalid('JWS Protected Header incorrect type');\n    }\n    if (jws.payload === undefined) {\n        throw new JWSInvalid('JWS Payload missing');\n    }\n    if (typeof jws.signature !== 'string') {\n        throw new JWSInvalid('JWS Signature missing or incorrect type');\n    }\n    if (jws.header !== undefined && !isObject(jws.header)) {\n        throw new JWSInvalid('JWS Unprotected Header incorrect type');\n    }\n    let parsedProt = {};\n    if (jws.protected) {\n        try {\n            const protectedHeader = base64url(jws.protected);\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch {\n            throw new JWSInvalid('JWS Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jws.header)) {\n        throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jws.header,\n    };\n    const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options?.crit, parsedProt, joseHeader);\n    let b64 = true;\n    if (extensions.has('b64')) {\n        b64 = parsedProt.b64;\n        if (typeof b64 !== 'boolean') {\n            throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n        }\n    }\n    const { alg } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    const algorithms = options && validateAlgorithms('algorithms', options.algorithms);\n    if (algorithms && !algorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter value not allowed');\n    }\n    if (b64) {\n        if (typeof jws.payload !== 'string') {\n            throw new JWSInvalid('JWS Payload must be a string');\n        }\n    }\n    else if (typeof jws.payload !== 'string' && !(jws.payload instanceof Uint8Array)) {\n        throw new JWSInvalid('JWS Payload must be a string or an Uint8Array instance');\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jws);\n        resolvedKey = true;\n        checkKeyTypeWithJwk(alg, key, 'verify');\n        if (isJWK(key)) {\n            key = await importJWK(key, alg);\n        }\n    }\n    else {\n        checkKeyTypeWithJwk(alg, key, 'verify');\n    }\n    const data = concat(encoder.encode(jws.protected ?? ''), encoder.encode('.'), typeof jws.payload === 'string' ? encoder.encode(jws.payload) : jws.payload);\n    let signature;\n    try {\n        signature = base64url(jws.signature);\n    }\n    catch {\n        throw new JWSInvalid('Failed to base64url decode the signature');\n    }\n    const verified = await verify(alg, key, signature, data);\n    if (!verified) {\n        throw new JWSSignatureVerificationFailed();\n    }\n    let payload;\n    if (b64) {\n        try {\n            payload = base64url(jws.payload);\n        }\n        catch {\n            throw new JWSInvalid('Failed to base64url decode the payload');\n        }\n    }\n    else if (typeof jws.payload === 'string') {\n        payload = encoder.encode(jws.payload);\n    }\n    else {\n        payload = jws.payload;\n    }\n    const result = { payload };\n    if (jws.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jws.header !== undefined) {\n        result.unprotectedHeader = jws.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\n","import { decode as decodeBase64URL } from '../runtime/base64url.js';\nimport { fromSPKI, fromPKCS8, fromX509 } from '../runtime/asn1.js';\nimport asKeyObject from '../runtime/jwk_to_key.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nexport async function importSPKI(spki, alg, options) {\n    if (typeof spki !== 'string' || spki.indexOf('-----BEGIN PUBLIC KEY-----') !== 0) {\n        throw new TypeError('\"spki\" must be SPKI formatted string');\n    }\n    return fromSPKI(spki, alg, options);\n}\nexport async function importX509(x509, alg, options) {\n    if (typeof x509 !== 'string' || x509.indexOf('-----BEGIN CERTIFICATE-----') !== 0) {\n        throw new TypeError('\"x509\" must be X.509 formatted string');\n    }\n    return fromX509(x509, alg, options);\n}\nexport async function importPKCS8(pkcs8, alg, options) {\n    if (typeof pkcs8 !== 'string' || pkcs8.indexOf('-----BEGIN PRIVATE KEY-----') !== 0) {\n        throw new TypeError('\"pkcs8\" must be PKCS#8 formatted string');\n    }\n    return fromPKCS8(pkcs8, alg, options);\n}\nexport async function importJWK(jwk, alg) {\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    alg || (alg = jwk.alg);\n    switch (jwk.kty) {\n        case 'oct':\n            if (typeof jwk.k !== 'string' || !jwk.k) {\n                throw new TypeError('missing \"k\" (Key Value) Parameter value');\n            }\n            return decodeBase64URL(jwk.k);\n        case 'RSA':\n            if (jwk.oth !== undefined) {\n                throw new JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\n            }\n        case 'EC':\n        case 'OKP':\n            return asKeyObject({ ...jwk, alg });\n        default:\n            throw new JOSENotSupported('Unsupported \"kty\" (Key Type) Parameter value');\n    }\n}\n","export default (date) => Math.floor(date.getTime() / 1000);\n","const minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\+|\\-)? ?(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)(?: (ago|from now))?$/i;\nexport default (str) => {\n    const matched = REGEX.exec(str);\n    if (!matched || (matched[4] && matched[1])) {\n        throw new TypeError('Invalid time period format');\n    }\n    const value = parseFloat(matched[2]);\n    const unit = matched[3].toLowerCase();\n    let numericDate;\n    switch (unit) {\n        case 'sec':\n        case 'secs':\n        case 'second':\n        case 'seconds':\n        case 's':\n            numericDate = Math.round(value);\n            break;\n        case 'minute':\n        case 'minutes':\n        case 'min':\n        case 'mins':\n        case 'm':\n            numericDate = Math.round(value * minute);\n            break;\n        case 'hour':\n        case 'hours':\n        case 'hr':\n        case 'hrs':\n        case 'h':\n            numericDate = Math.round(value * hour);\n            break;\n        case 'day':\n        case 'days':\n        case 'd':\n            numericDate = Math.round(value * day);\n            break;\n        case 'week':\n        case 'weeks':\n        case 'w':\n            numericDate = Math.round(value * week);\n            break;\n        default:\n            numericDate = Math.round(value * year);\n            break;\n    }\n    if (matched[1] === '-' || matched[4] === 'ago') {\n        return -numericDate;\n    }\n    return numericDate;\n};\n","import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\nimport { decoder } from './buffer_utils.js';\nimport epoch from './epoch.js';\nimport secs from './secs.js';\nimport isObject from './is_object.js';\nconst normalizeTyp = (value) => value.toLowerCase().replace(/^application\\//, '');\nconst checkAudiencePresence = (audPayload, audOption) => {\n    if (typeof audPayload === 'string') {\n        return audOption.includes(audPayload);\n    }\n    if (Array.isArray(audPayload)) {\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n    }\n    return false;\n};\nexport default (protectedHeader, encodedPayload, options = {}) => {\n    let payload;\n    try {\n        payload = JSON.parse(decoder.decode(encodedPayload));\n    }\n    catch {\n    }\n    if (!isObject(payload)) {\n        throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\n    }\n    const { typ } = options;\n    if (typ &&\n        (typeof protectedHeader.typ !== 'string' ||\n            normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n        throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', payload, 'typ', 'check_failed');\n    }\n    const { requiredClaims = [], issuer, subject, audience, maxTokenAge } = options;\n    const presenceCheck = [...requiredClaims];\n    if (maxTokenAge !== undefined)\n        presenceCheck.push('iat');\n    if (audience !== undefined)\n        presenceCheck.push('aud');\n    if (subject !== undefined)\n        presenceCheck.push('sub');\n    if (issuer !== undefined)\n        presenceCheck.push('iss');\n    for (const claim of new Set(presenceCheck.reverse())) {\n        if (!(claim in payload)) {\n            throw new JWTClaimValidationFailed(`missing required \"${claim}\" claim`, payload, claim, 'missing');\n        }\n    }\n    if (issuer &&\n        !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n        throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', payload, 'iss', 'check_failed');\n    }\n    if (subject && payload.sub !== subject) {\n        throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', payload, 'sub', 'check_failed');\n    }\n    if (audience &&\n        !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n        throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', payload, 'aud', 'check_failed');\n    }\n    let tolerance;\n    switch (typeof options.clockTolerance) {\n        case 'string':\n            tolerance = secs(options.clockTolerance);\n            break;\n        case 'number':\n            tolerance = options.clockTolerance;\n            break;\n        case 'undefined':\n            tolerance = 0;\n            break;\n        default:\n            throw new TypeError('Invalid clockTolerance option type');\n    }\n    const { currentDate } = options;\n    const now = epoch(currentDate || new Date());\n    if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== 'number') {\n        throw new JWTClaimValidationFailed('\"iat\" claim must be a number', payload, 'iat', 'invalid');\n    }\n    if (payload.nbf !== undefined) {\n        if (typeof payload.nbf !== 'number') {\n            throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', payload, 'nbf', 'invalid');\n        }\n        if (payload.nbf > now + tolerance) {\n            throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', payload, 'nbf', 'check_failed');\n        }\n    }\n    if (payload.exp !== undefined) {\n        if (typeof payload.exp !== 'number') {\n            throw new JWTClaimValidationFailed('\"exp\" claim must be a number', payload, 'exp', 'invalid');\n        }\n        if (payload.exp <= now - tolerance) {\n            throw new JWTExpired('\"exp\" claim timestamp check failed', payload, 'exp', 'check_failed');\n        }\n    }\n    if (maxTokenAge) {\n        const age = now - payload.iat;\n        const max = typeof maxTokenAge === 'number' ? maxTokenAge : secs(maxTokenAge);\n        if (age - tolerance > max) {\n            throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', payload, 'iat', 'check_failed');\n        }\n        if (age < 0 - tolerance) {\n            throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', payload, 'iat', 'check_failed');\n        }\n    }\n    return payload;\n};\n","import { compactVerify } from '../jws/compact/verify.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTInvalid } from '../util/errors.js';\nexport async function jwtVerify(jwt, key, options) {\n    const verified = await compactVerify(jwt, key, options);\n    if (verified.protectedHeader.crit?.includes('b64') && verified.protectedHeader.b64 === false) {\n        throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n    }\n    const payload = jwtPayload(verified.protectedHeader, verified.payload, options);\n    const result = { payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n","import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactVerify(jws, key, options) {\n    if (jws instanceof Uint8Array) {\n        jws = decoder.decode(jws);\n    }\n    if (typeof jws !== 'string') {\n        throw new JWSInvalid('Compact JWS must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split('.');\n    if (length !== 3) {\n        throw new JWSInvalid('Invalid Compact JWS');\n    }\n    const verified = await flattenedVerify({ payload, protected: protectedHeader, signature }, key, options);\n    const result = { payload: verified.payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n","import '../css/dashboard.css';\n// import jwt from 'jsonwebtoken';\n\nimport { jwtVerify } from 'jose';\n\nimport headerProfileImgSrc from '../dashboardAssets/user.png';\nimport notificationImgSrc from '../dashboardAssets/notification.png';\nimport sendImgSrc from '../dashboardAssets/send.png';\nimport withdrawImgSrc from '../dashboardAssets/withdraw.png';\nimport topupImgSrc from '../dashboardAssets/deposit.png';\nimport sendtobankImgSrc from '../dashboardAssets/sendtobank.png';\nimport mpesaImgSrc from '../dashboardAssets/mpesa.png';\nimport homeImgSrc from '../dashboardAssets/home.png';\nimport activityImgSrc from '../dashboardAssets/activity.png';\nimport walletImgSrc from '../dashboardAssets/wallet.png';\nimport navbarProfileImgSrc from '../dashboardAssets/profile.png';\nimport visaLogoSrc from '../dashboardAssets/visa.png';\n//main/w/h\nconst dashWrapper = document.createElement('div');\nconst dashboardWrapper = document.createElement('div');\nconst headerWrapper = document.createElement('div');\nconst headerTopWrapper = document.createElement('div');\nconst headerBottomWrapper = document.createElement('div');\nconst bottomsheetWrapper = document.createElement('div');\nconst bottomsheetHeader = document.createElement('div');\nconst bottomsheetHeaderTop = document.createElement('div');\nconst bottomsheetBottom = document.createElement('div');\nconst bottomsheetBottomTop = document.createElement('div');\nconst bottomsheetBottomBottom = document.createElement('div');\nconst navbarWrapper = document.createElement('div');\n//childe/w/h\nconst profilewrapper = document.createElement('div');\nconst profileInfoHolder = document.createElement('div');\nconst profileImgHolder = document.createElement('div');\nconst headerTopRightControlsHolder = document.createElement('div');\nconst balanceHolder = document.createElement('div');\nconst bottomsheetHeaderTopControlsHolder = document.createElement('div');\nconst bottomsheetBottomBottomControlsHolder = document.createElement('div');\nconst bottomsheetBottomBottomControlsWrapper = document.createElement('div');\nconst navbarHomeHolder = document.createElement('div');\nconst navbarActivityHolder = document.createElement('div');\nconst navbarPaymentHolder = document.createElement('div');\nconst navbarProfileHolder = document.createElement('div');\nconst sendControlGroup = document.createElement('div');\nconst withdrawControlGroup = document.createElement('div');\nconst topupControlGroup = document.createElement('div');\nconst sendtobankControlGroup = document.createElement('div');\nconst mpesaGroup = document.createElement('div');\nconst mpesaImgHolder = document.createElement('div');\nconst nameAndGroupInfoHolder = document.createElement('div');\nconst notificationGroup = document.createElement('div');\nconst cardGroup = document.createElement('div');\n//elem\nconst headerProfileImg = document.createElement('img');\nconst profileTitleText = document.createElement('p');\nconst profileNameText = document.createElement('p');\nconst notificationImg = document.createElement('img');\nconst balanceText = document.createElement('p');\nconst balance = document.createElement('h1');\nconst actionsTitle = document.createElement('h3');\nconst sendImg = document.createElement('img');\nconst sendText = document.createElement('p');\nconst withdrawImg = document.createElement('img');\nconst withdrawText = document.createElement('p');\nconst topupImg = document.createElement('img');\nconst topupText = document.createElement('p');\nconst sendtobankImg = document.createElement('img');\nconst sendtoBankText = document.createElement('p');\nconst activityText = document.createElement('h3');\nconst mpesaImg = document.createElement('img');\nconst mpesaTitle = document.createElement('p');\nconst amount = document.createElement('p');\nconst transactionType = document.createElement('p');\nconst transactionStatus = document.createElement('p');\nconst homeImg = document.createElement('img');\nconst activityImg = document.createElement('img');\nconst walletImg = document.createElement('img');\nconst navbarProfileImg = document.createElement('img');\nconst visaLogo = document.createElement('img');\n//cls\nnotificationGroup.classList = \"notificationGroup\";\ncardGroup.classList = \"cardGroup\";\ndashWrapper.classList = 'dashWrapper';\ndashboardWrapper.classList = 'dashboardWrapper';\nheaderWrapper.classList = 'headerWrapper';\nheaderTopWrapper.classList = 'headerTopWrapper';\nheaderBottomWrapper.classList = 'headerBottomWrapper';\nbottomsheetWrapper.classList = 'bottomsheetWrapper';\nbottomsheetHeader.classList = 'bottomsheetHeader';\nbottomsheetHeaderTop.classList = 'bottomsheetHeaderTop';\nbottomsheetBottom.classList = 'bottomsheetBottom';\nbottomsheetBottomTop.classList = 'bottomsheetBottomTop';\nbottomsheetBottomBottom.classList = 'bottomsheetBottomBottom';\nnavbarWrapper.classList = 'navbarWrapper';\nprofilewrapper.classList = 'profilewrapper';\nprofileInfoHolder.classList = 'profileInfoHolder';\nprofileImgHolder.classList = 'profileImgHolder';\nheaderTopRightControlsHolder.classList = 'headerTopRightControlsHolder';\nbalanceHolder.classList = 'balanceHolder';\nbottomsheetHeaderTopControlsHolder.classList = 'bottomsheetHeaderTopControlsHolder';\nbottomsheetBottomBottomControlsHolder.classList = 'bottomsheetBottomBottomControlsHolder';\nnavbarHomeHolder.classList = 'navbarHomeHolder';\nnavbarActivityHolder.classList = 'navbarActivityHolder';\nnavbarPaymentHolder.classList = 'navbarPaymentHolder';\nnavbarProfileHolder.classList = 'navbarProfileHolder';\nsendControlGroup.classList = 'sendControlGroup';\nwithdrawControlGroup.classList = 'withdrawControlGroup';\ntopupControlGroup.classList = 'topupControlGroup';\nsendtobankControlGroup.classList = 'sendtobankControlGroup';\nheaderProfileImg.classList = 'headerProfileImg';\nprofileTitleText.classList = 'profileTitleText';\nprofileNameText.classList = 'profileNameText';\nnotificationImg.classList = 'notificationImg';\nbalanceText.classList = 'balanceText';\nbalance.classList = 'balance';\nactionsTitle.classList = 'actionsTitle';\nsendImg.classList = 'sendImg';\nsendText.classList = 'sendText';\nwithdrawImg.classList = 'withdrawImg';\nwithdrawText.classList = 'withdrawText';\ntopupImg.classList = 'topupImg';\ntopupText.classList = 'topupText';\nsendtobankImg.classList = 'sendtobankImg';\nsendtoBankText.classList = 'sendtoBankText';\nactivityText.classList = 'activityText';\nmpesaImg.classList = 'mpesaImg';\nmpesaTitle.classList = 'mpesaTitle';\namount.classList = 'amount';\ntransactionType.classList = 'transactionType';\ntransactionStatus.classList = 'transactionStatus';\nhomeImg.classList = 'homeImg';\nactivityImg.classList = 'activityImg';\nwalletImg.classList = 'walletImg';\nnavbarProfileImg.classList = 'navbarProfileImg';\nmpesaGroup.classList = \"mpesaGroup\";\nmpesaImgHolder.classList = \"mpesaImgHolder\";\nnameAndGroupInfoHolder.classList = \"nameAndGroupInfoHolder\";\nvisaLogo.classList = \"visaLogo\";\nbottomsheetBottomBottomControlsWrapper.classList = \"bottomsheetBottomBottomControlsWrapper\";\n//props\nvisaLogo.src = visaLogoSrc;\nvisaLogo.alt = 'Cards';\nheaderProfileImg.src = headerProfileImgSrc;\nheaderProfileImg.alt = 'Profile';\nprofileTitleText.textContent = 'Welcome Back,';\nprofileNameText.textContent = 'Rose K';\nnotificationImg.src = notificationImgSrc;\nnotificationImg.alt = 'Notification';\nbalanceText.textContent = 'Available Balance';\nbalance.textContent = '$54,000';\nactionsTitle.textContent = 'Actions';\nsendImg.src = sendImgSrc;\nsendImg.alt = 'Send Money';\nsendText.textContent = 'Send';\nwithdrawImg.src = withdrawImgSrc;\nwithdrawImg.alt = 'Withdraw Money';\nwithdrawText.textContent = 'Withdraw';\ntopupImg.src = topupImgSrc;\ntopupImg.alt = 'Top Up';\ntopupText.textContent = 'Top';\nsendtobankImg.src = sendtobankImgSrc;\nsendtobankImg.alt = 'Bank Transfer';\nsendtoBankText.textContent = 'Bank Transfer';\nactivityText.textContent = 'Recent Activity';\nmpesaImg.src = mpesaImgSrc;\nmpesaImg.alt = 'Mpesa';\nmpesaTitle.textContent = 'Mpesa';\namount.textContent = '$1,000';\ntransactionType.textContent = 'Till';\ntransactionStatus.textContent = 'Success';\nhomeImg.src = homeImgSrc;\nhomeImg.alt = 'Home';\nactivityImg.src = activityImgSrc;\nactivityImg.alt = 'Activity';\nwalletImg.src = walletImgSrc;\nwalletImg.alt = 'Wallet';\nnavbarProfileImg.src = navbarProfileImgSrc;\nnavbarProfileImg.alt = 'Profile';\n//appends\n\n\n//header apps\nprofileImgHolder.appendChild(headerProfileImg);\nprofileInfoHolder.appendChild(profileTitleText);\nprofileInfoHolder.appendChild(profileNameText);\nprofilewrapper.appendChild(profileImgHolder);\nprofilewrapper.appendChild(profileInfoHolder);\nheaderTopWrapper.appendChild(profilewrapper);\nnotificationGroup.appendChild(notificationImg);\ncardGroup.appendChild(visaLogo);\nheaderTopRightControlsHolder.appendChild(notificationGroup);\nheaderTopRightControlsHolder.appendChild(cardGroup);\nbalanceHolder.appendChild(balanceText);\nbalanceHolder.appendChild(balance);\nheaderBottomWrapper.appendChild(balanceHolder);\nheaderTopWrapper.appendChild(headerTopRightControlsHolder);\nheaderWrapper.appendChild(headerTopWrapper);\nheaderWrapper.appendChild(headerBottomWrapper);\n//bottomsheet apps\nbottomsheetHeaderTop.appendChild(actionsTitle);\nsendControlGroup.appendChild(sendImg);\nsendControlGroup.appendChild(sendText);\nwithdrawControlGroup.appendChild(withdrawImg);\nwithdrawControlGroup.appendChild(withdrawText);\ntopupControlGroup.appendChild(topupImg);\ntopupControlGroup.appendChild(topupText);\nsendtobankControlGroup.appendChild(sendtobankImg);\nsendtobankControlGroup.appendChild(sendtoBankText);\nbottomsheetHeaderTopControlsHolder.appendChild(sendControlGroup);\nbottomsheetHeaderTopControlsHolder.appendChild(withdrawControlGroup);\nbottomsheetHeaderTopControlsHolder.appendChild(topupControlGroup);\nbottomsheetHeaderTopControlsHolder.appendChild(sendtobankControlGroup);\nbottomsheetHeaderTop.appendChild(bottomsheetHeaderTopControlsHolder);\nbottomsheetHeader.appendChild(bottomsheetHeaderTop);\nbottomsheetWrapper.appendChild(bottomsheetHeader);\nbottomsheetBottomBottomControlsHolder.appendChild(activityText);\nmpesaImgHolder.appendChild(mpesaImg);\nnameAndGroupInfoHolder.appendChild(mpesaTitle);\nnameAndGroupInfoHolder.appendChild(amount);\nmpesaGroup.appendChild(mpesaImgHolder);\nmpesaGroup.appendChild(nameAndGroupInfoHolder);\nbottomsheetBottomBottomControlsWrapper.appendChild(mpesaGroup);\nbottomsheetBottomBottomControlsWrapper.appendChild(transactionType);\nbottomsheetBottomBottomControlsWrapper.appendChild(transactionStatus);\nbottomsheetBottomBottomControlsHolder.appendChild(bottomsheetBottomBottomControlsWrapper);\nbottomsheetBottom.appendChild(bottomsheetBottomBottomControlsHolder);\n// bottomsheetBottom.appendChild(bottomsheetBottomBottom);\nbottomsheetWrapper.appendChild(bottomsheetBottom);\n//nav bar\nnavbarHomeHolder.appendChild(homeImg);\nnavbarActivityHolder.appendChild(activityImg);\nnavbarPaymentHolder.appendChild(walletImg);\nnavbarProfileHolder.appendChild(navbarProfileImg);\nnavbarWrapper.appendChild(navbarHomeHolder);\nnavbarWrapper.appendChild(navbarActivityHolder);\nnavbarWrapper.appendChild(navbarPaymentHolder);\nnavbarWrapper.appendChild(navbarProfileHolder);\n//dashmain\ndashWrapper.appendChild(headerWrapper);\ndashWrapper.appendChild(bottomsheetWrapper);\ndashWrapper.appendChild(navbarWrapper);\ndocument.body.appendChild(dashWrapper);\n//events\n\n\n//mis\n//basi veri\n// Custom function to verify signature and redirect to login if invalid\n// Custom function to verify signature using SHA-256 and redirect if invalid\n// Custom function to verify signature using SHA-256 and redirect if invalid\n// Function to verify JWT using the secret key\n\nasync function verifyJWT(token) {\n    const secretKey = new TextEncoder().encode(\"G$8a9Zq5@dR3^yX!7wKj*Ue2#fH6%tLp\");\n\n    try {\n        const { payload } = await jwtVerify(token, secretKey);\n        console.log('Token is valid:', payload);\n        // Continue with your application logic here\n    } catch (error) {\n        console.error('Invalid token:', error);\n        window.location.href = '/login'; // Redirect if invalid\n    }\n}\n\nfunction getTokenFromUrl() {\n    const urlParams = new URLSearchParams(window.location.search);\n    return urlParams.get('token'); // Change 'token' if your query parameter has a different name\n}\n\n// Example usage\nconst token = getTokenFromUrl(); // Retrieve the token from the URL\nif (token) {\n    verifyJWT(token);\n} else {\n    window.location.href = '/login'; // Redirect if no token\n}\n"],"names":["TextEncoder","decoder","TextDecoder","concat","buffers","size","reduce","acc","length","buf","Uint8Array","i","buffer","set","decode","input","encoded","replace","binary","atob","bytes","charCodeAt","decodeBase64","TypeError","JOSEError","Error","code","constructor","message","super","this","name","captureStackTrace","JWTClaimValidationFailed","payload","claim","reason","JWTExpired","JOSEAlgNotAllowed","arguments","JOSENotSupported","JWSInvalid","JWTInvalid","Symbol","asyncIterator","JWSSignatureVerificationFailed","isCryptoKey","key","CryptoKey","unusable","prop","isAlgorithm","algorithm","getHashLength","hash","parseInt","slice","checkUsage","usages","some","expected","includes","msg","last","pop","join","checkSigCryptoKey","alg","getNamedCurve","namedCurve","actual","types","filter","Boolean","withAlg","toStringTag","isObject","value","Object","prototype","toString","call","getPrototypeOf","proto","isJWK","kty","async","jwk","keyUsages","d","crv","subtleMapping","rest","ext","key_ops","keyData","use","subtle","importKey","exportKeyValue","k","privCache","pubCache","isKeyObject","importAndCache","cache","freeze","cached","get","cryptoKey","export","format","dp","dq","p","q","qi","WeakMap","signature","data","usage","startsWith","modulusLength","saltLength","verify","headers","sources","header","parameters","keys","parameter","has","add","Set","tag","jwkMatchesOp","undefined","symmetricTypeCheck","allowJwk","type","checkKeyType","test","asymmetricTypeCheck","bind","checkKeyTypeWithJwk","Err","recognizedDefault","recognizedOption","protectedHeader","joseHeader","crit","Array","isArray","recognized","Map","entries","option","algorithms","s","flattenedVerify","jws","options","protected","parsedProt","JSON","parse","b64","resolvedKey","oth","importJWK","encode","result","unprotectedHeader","day","hour","REGEX","str","matched","exec","parseFloat","numericDate","toLowerCase","Math","round","minute","normalizeTyp","encodedPayload","typ","requiredClaims","issuer","subject","audience","maxTokenAge","presenceCheck","push","reverse","iss","sub","audPayload","aud","audOption","tolerance","clockTolerance","secs","currentDate","now","date","Date","floor","getTime","iat","nbf","exp","age","jwtVerify","jwt","verified","split","compactVerify","_regeneratorRuntime","e","t","r","n","hasOwnProperty","o","defineProperty","a","iterator","c","u","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","h","l","f","y","GeneratorFunction","GeneratorFunctionPrototype","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","Promise","prev","charAt","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","dashWrapper","document","createElement","dashboardWrapper","headerWrapper","headerTopWrapper","headerBottomWrapper","bottomsheetWrapper","bottomsheetHeader","bottomsheetHeaderTop","bottomsheetBottom","bottomsheetBottomTop","bottomsheetBottomBottom","navbarWrapper","profilewrapper","profileInfoHolder","profileImgHolder","headerTopRightControlsHolder","balanceHolder","bottomsheetHeaderTopControlsHolder","bottomsheetBottomBottomControlsHolder","bottomsheetBottomBottomControlsWrapper","navbarHomeHolder","navbarActivityHolder","navbarPaymentHolder","navbarProfileHolder","sendControlGroup","withdrawControlGroup","topupControlGroup","sendtobankControlGroup","mpesaGroup","mpesaImgHolder","nameAndGroupInfoHolder","notificationGroup","cardGroup","headerProfileImg","profileTitleText","profileNameText","notificationImg","balanceText","balance","actionsTitle","sendImg","sendText","withdrawImg","withdrawText","topupImg","topupText","sendtobankImg","sendtoBankText","activityText","mpesaImg","mpesaTitle","amount","transactionType","transactionStatus","homeImg","activityImg","walletImg","navbarProfileImg","visaLogo","_verifyJWT","_callee","token","secretKey","_yield$jwtVerify","_context","console","log","t0","error","window","location","href","apply","_next","_throw","classList","src","visaLogoSrc","alt","headerProfileImgSrc","textContent","notificationImgSrc","sendImgSrc","withdrawImgSrc","topupImgSrc","sendtobankImgSrc","mpesaImgSrc","homeImgSrc","activityImgSrc","walletImgSrc","navbarProfileImgSrc","appendChild","body","URLSearchParams","search","_x","verifyJWT"],"sourceRoot":""}
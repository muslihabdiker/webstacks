{"version":3,"file":"login/js/login.7ac71255ee5e1d8d4995.bundle.js","mappings":"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","sources":["webpack://ahmed/./src/assets/js/login.js","webpack://ahmed/./src/assets/js/bCaller/loginApi.js"],"sourcesContent":["import '../css/login.css';\nimport loginIco from '../images/icons/loginIcon.png';\nimport backgroundImg from '../images/icons/background.png';\nimport { handleLogin } from './bCaller/loginApi';\n    const wrapper = document.createElement('div');\n    const header = document.createElement('div');\n    export const middleInputsHolder = document.createElement('div');\n    const bottomInputsHolder = document.createElement('div');\n    const signupHolder = document.createElement('a');\n   export  const emailGroup = document.createElement('div');\n    const pwdGroup = document.createElement('div');\n    const emailLabel = document.createElement('label');\n    const passwordLabel = document.createElement('label');\n    const logoImg = document.createElement('img');\n    const infoText = document.createElement('p');\n    const simpleNota = document.createElement('p');\n    const loginH1 = document.createElement('h1');\n   export  const email = document.createElement('input');\n   export  const password = document.createElement('input');\n    export const loginButton = document.createElement('button');\n    const forgotPwd = document.createElement('a');\n    const signupText = document.createElement('p');\n    const signupLink = document.createElement('a');\n    const Eplaceholder_label = document.createElement('label');\n    const Pplaceholder_label = document.createElement('label');\n    export const result = document.createElement('p');\n    export const loader = document.createElement('span');\n    loader.classList = \"loader\";\n    wrapper.classList = \"wrapper\";\n    header.classList = \"header\";\n    middleInputsHolder.classList = \"middleInputsHolder\";\n    bottomInputsHolder.classList = \"bottomInputsHolder\";\n    signupHolder.classList = \"signupHolder\";\n    logoImg.classList = \"logoImg\";\n    infoText.classList = \"infoText\";\n    simpleNota.classList = \"simpleNota\";\n    email.classList = \"commonInput\";\n    password.classList = \"commonInput\";\n    loginButton.classList = \"loginButton\";\n    forgotPwd.classList = \"forgotPwd\";\n    signupLink.classList = \"signupLink\";\n    signupText.classList = \"signupText\";\n    loginH1.classList = \"loginH1\";\n    emailGroup.classList = \"emailGroup\";\n    pwdGroup.classList = \"pwdGroup\";\n    emailLabel.classList = \"emailLabel\";\n    passwordLabel.classList = \"passwordLabel\";\n    email.placeholder = \"\";\n    email.type = \"text\";\n    email.id = \"email\";\n    password.placeholder = \"\";\n    password.type = \"password\";\n    password.id = \"password\";\n    logoImg.src = loginIco;\n    loginButton.innerText = \"Login\";\n    loginH1.innerText = \"Login\";\n    signupLink.innerText = \"Sign Up\";\n    signupLink.href = \"/signup\";\n    signupText.innerText = \"Don't have an account?\";\n    forgotPwd.innerText = \"Forgot Password?\";\n    forgotPwd.href = \"/forgot\";\n    infoText.innerText = \"Please login to access cashly service\";\n    emailLabel.setAttribute('for', 'email');\n    passwordLabel.setAttribute('for', 'email');\n    emailLabel.innerText  = \"Email\";\n    passwordLabel.innerText = \"Password\";\ndocument.body.style.backgroundImage = `url(${backgroundImg})`;\n    header.appendChild(logoImg);\n    header.appendChild(loginH1);\n    header.appendChild(infoText);\n    emailGroup.appendChild(email);\n    emailGroup.appendChild(emailLabel);\n    pwdGroup.appendChild(password);\n    pwdGroup.appendChild(passwordLabel);\n    middleInputsHolder.appendChild(emailGroup);\n    middleInputsHolder.appendChild(pwdGroup);\n    middleInputsHolder.appendChild(forgotPwd);\n    signupHolder.appendChild(signupText);\n    signupHolder.appendChild(signupLink);\n    bottomInputsHolder.appendChild(loginButton);\n    bottomInputsHolder.appendChild(signupHolder);\n    wrapper.appendChild(header);\n    wrapper.appendChild(middleInputsHolder);\n    wrapper.appendChild(bottomInputsHolder);\n    document.body.appendChild(wrapper);\n    const validateLoginForm = () => {\n        const emailValue = email.value.trim();\n        const passwordValue = password.value.trim();\n      \n        // Email validation\n        const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (!emailPattern.test(emailValue)) {\n          result.innerText = \"Please enter a valid email address.\";\n          result.style.color = 'red';\n          middleInputsHolder.insertBefore(result, emailGroup);\n          return false;\n        }\n      \n        // Password validation\n        if (passwordValue.length === 0) { // Check if the password is empty\n          result.innerText = \"Password cannot be empty.\";\n          result.style.color = 'red';\n          middleInputsHolder.insertBefore(result, emailGroup);\n          return false;\n        }\n      \n        // Clear any previous result message if validation passes\n        result.innerText = \"\";\n        return true;\n      };\n      \n      loginButton.addEventListener('click', () => {\n        // Validate form before proceeding\n        if (!validateLoginForm()) {\n          return; // Stop execution if validation fails\n        }\n      \n        handleLogin(); // Proceed with the login if validation passes\n      });\n      ","import axios from \"axios\"; // Ensure axios is installed and imported\nimport { emailGroup, email, password, result, middleInputsHolder, loginButton, loader } from \"../login\"; // Assuming `loginButton` and `loader` are exported from the same file\n\nexport const handleLogin = () => {\n  // Disable the login button and show loader\n  loginButton.disabled = true;\n  loginButton.innerText = \"\";\n  loginButton.appendChild(loader);\n\n  axios.post('https://jr.paswad.com/18081/login', {\n      username: email.value,\n      password: password.value,\n    })\n    .then(response => {\n      const data = response.data;\n\n      if (data.response.code === 0) {\n        // Update the `result` element with the error message and set the color to red\n        result.innerText = data.response.payload.message;\n        result.style.color = 'red';\n        middleInputsHolder.insertBefore(result, emailGroup);\n\n        // Make the message disappear after 5 seconds\n        setTimeout(() => {\n          result.innerText = \"\"; // Clear the message\n          result.style.color = ''; // Reset the style\n          middleInputsHolder.removeChild(result);\n        }, 5000);\n      } else {\n        // Handle success case\n        const jwt = data.response.payload.resource; // Get the JWT from the response\n        result.innerText = data.response.payload.message; // Display success message\n        result.style.color = ''; // Reset the color\n\n        // Redirect to the dashboard with JWT in the URL\n          window.location.href = `/dashboard?token=${encodeURIComponent(jwt)}`; // Redirect with JWT\n      }\n    })\n    .catch(error => {\n      console.error('There was a problem with the login operation:', error);\n    })\n    .finally(() => {\n      // Re-enable the login button and remove the loader after the request completes\n      loginButton.disabled = false;\n      loginButton.innerHTML = 'Login'; // Restore the original button text\n    });\n};\n"],"names":["wrapper","document","createElement","header","middleInputsHolder","bottomInputsHolder","signupHolder","emailGroup","pwdGroup","emailLabel","passwordLabel","logoImg","infoText","simpleNota","loginH1","email","password","loginButton","forgotPwd","signupText","signupLink","result","loader","classList","placeholder","type","id","src","loginIco","innerText","href","setAttribute","body","style","backgroundImage","concat","backgroundImg","appendChild","addEventListener","emailValue","passwordValue","value","trim","test","length","color","insertBefore","disabled","axios","post","username","then","response","data","code","payload","message","setTimeout","removeChild","jwt","resource","window","location","encodeURIComponent","error","console","innerHTML"],"sourceRoot":""}
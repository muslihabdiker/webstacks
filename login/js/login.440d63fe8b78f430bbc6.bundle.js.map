{"version":3,"file":"login/js/login.440d63fe8b78f430bbc6.bundle.js","mappings":"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","sources":["webpack://ahmed/./src/assets/js/bCaller/loginApi.js","webpack://ahmed/./node_modules/jose/dist/browser/lib/buffer_utils.js","webpack://ahmed/./node_modules/jose/dist/browser/runtime/base64url.js","webpack://ahmed/./node_modules/jose/dist/browser/util/errors.js","webpack://ahmed/./node_modules/jose/dist/browser/runtime/webcrypto.js","webpack://ahmed/./node_modules/jose/dist/browser/lib/crypto_key.js","webpack://ahmed/./node_modules/jose/dist/browser/lib/invalid_key_input.js","webpack://ahmed/./node_modules/jose/dist/browser/runtime/is_key_like.js","webpack://ahmed/./node_modules/jose/dist/browser/lib/is_object.js","webpack://ahmed/./node_modules/jose/dist/browser/lib/is_jwk.js","webpack://ahmed/./node_modules/jose/dist/browser/runtime/jwk_to_key.js","webpack://ahmed/./node_modules/jose/dist/browser/runtime/normalize_key.js","webpack://ahmed/./node_modules/jose/dist/browser/runtime/verify.js","webpack://ahmed/./node_modules/jose/dist/browser/runtime/get_sign_verify_key.js","webpack://ahmed/./node_modules/jose/dist/browser/runtime/check_key_length.js","webpack://ahmed/./node_modules/jose/dist/browser/runtime/subtle_dsa.js","webpack://ahmed/./node_modules/jose/dist/browser/lib/is_disjoint.js","webpack://ahmed/./node_modules/jose/dist/browser/lib/check_key_type.js","webpack://ahmed/./node_modules/jose/dist/browser/lib/validate_crit.js","webpack://ahmed/./node_modules/jose/dist/browser/lib/validate_algorithms.js","webpack://ahmed/./node_modules/jose/dist/browser/jws/flattened/verify.js","webpack://ahmed/./node_modules/jose/dist/browser/key/import.js","webpack://ahmed/./node_modules/jose/dist/browser/lib/epoch.js","webpack://ahmed/./node_modules/jose/dist/browser/lib/secs.js","webpack://ahmed/./node_modules/jose/dist/browser/lib/jwt_claims_set.js","webpack://ahmed/./node_modules/jose/dist/browser/jwt/verify.js","webpack://ahmed/./node_modules/jose/dist/browser/jws/compact/verify.js","webpack://ahmed/./src/assets/js/modules/login/index.js"],"sourcesContent":["import axios from \"axios\";\nimport { wrapper } from \"../modules/login\";\nimport { emailGroup, email, password, result, middleInputsHolder, loginButton, loader } from \"../modules/login\";\n\n// Function to set the cookie with an expiration time of 4 hours\n\nconst setCookie = (name, value, hours) => {\n  let expires = \"\";\n  if (hours) {\n    const date = new Date();\n    date.setTime(date.getTime() + (hours * 60 * 60 * 1000)); // Convert hours to milliseconds\n    expires = \"; expires=\" + date.toUTCString();\n  }\n  document.cookie = name + \"=\" + (value || \"\") + expires + \"; path=/\";\n};\n\nexport const handleLogin = () => {\n  loginButton.disabled = true;\n  loginButton.innerText = \"\";\n  loginButton.appendChild(loader);\n  axios.post('https://api.cashly.me/login/', {\n      username: email.value,\n      password: password.value,\n    })\n    .then(response => {\n      const data = response.data;\n      if (data.response.code === 0) {\n        result.innerText = data.response.payload.message;\n        result.style.color = '#ff8383';\n        result.style.fontSize = 'large';\n        middleInputsHolder.insertBefore(result, emailGroup);\n        setTimeout(() => {\n          result.innerText = \"\";\n          result.style.color = '';\n          middleInputsHolder.removeChild(result);\n        }, 5000);\n      } else {\n        const jwt = data.response.payload.resource;\n        result.innerText = data.response.payload.message;\n        result.style.color = '';\n // Save the token to a cookie with a 4-hour expiry\n setCookie('token', jwt, 4);\n//  createOtpForm(wrapper);\n///window.location.href = `/dashboard?token=${encodeURIComponent(jwt)}&email=${encodeURIComponent(email.value)}`; \n        window.location.href = `/otp?token=${encodeURIComponent(jwt)}&email=${encodeURIComponent(email.value)}`;\n      }\n    })\n    .catch(error => {\n      console.error('There was a problem with the login operation:', error);\n    })\n    .finally(() => {\n      loginButton.disabled = false;\n      loginButton.innerHTML = 'Login';\n    });\n};\n","import digest from '../runtime/digest.js';\nexport const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nexport function concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    for (const buffer of buffers) {\n        buf.set(buffer, i);\n        i += buffer.length;\n    }\n    return buf;\n}\nexport function p2s(alg, p2sInput) {\n    return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nexport function uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nexport function uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\nexport function lengthAndInput(input) {\n    return concat(uint32be(input.length), input);\n}\nexport async function concatKdf(secret, bits, value) {\n    const iterations = Math.ceil((bits >> 3) / 32);\n    const res = new Uint8Array(iterations * 32);\n    for (let iter = 0; iter < iterations; iter++) {\n        const buf = new Uint8Array(4 + secret.length + value.length);\n        buf.set(uint32be(iter + 1));\n        buf.set(secret, 4);\n        buf.set(value, 4 + secret.length);\n        res.set(await digest('sha256', buf), iter * 32);\n    }\n    return res.slice(0, bits >> 3);\n}\n","import { encoder, decoder } from '../lib/buffer_utils.js';\nexport const encodeBase64 = (input) => {\n    let unencoded = input;\n    if (typeof unencoded === 'string') {\n        unencoded = encoder.encode(unencoded);\n    }\n    const CHUNK_SIZE = 0x8000;\n    const arr = [];\n    for (let i = 0; i < unencoded.length; i += CHUNK_SIZE) {\n        arr.push(String.fromCharCode.apply(null, unencoded.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join(''));\n};\nexport const encode = (input) => {\n    return encodeBase64(input).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n};\nexport const decodeBase64 = (encoded) => {\n    const binary = atob(encoded);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n};\nexport const decode = (input) => {\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = decoder.decode(encoded);\n    }\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\n    try {\n        return decodeBase64(encoded);\n    }\n    catch {\n        throw new TypeError('The input to be decoded is not correctly encoded.');\n    }\n};\n","export class JOSEError extends Error {\n    static get code() {\n        return 'ERR_JOSE_GENERIC';\n    }\n    constructor(message) {\n        super(message);\n        this.code = 'ERR_JOSE_GENERIC';\n        this.name = this.constructor.name;\n        Error.captureStackTrace?.(this, this.constructor);\n    }\n}\nexport class JWTClaimValidationFailed extends JOSEError {\n    static get code() {\n        return 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n    }\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n        this.claim = claim;\n        this.reason = reason;\n        this.payload = payload;\n    }\n}\nexport class JWTExpired extends JOSEError {\n    static get code() {\n        return 'ERR_JWT_EXPIRED';\n    }\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.code = 'ERR_JWT_EXPIRED';\n        this.claim = claim;\n        this.reason = reason;\n        this.payload = payload;\n    }\n}\nexport class JOSEAlgNotAllowed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n    static get code() {\n        return 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n}\nexport class JOSENotSupported extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_NOT_SUPPORTED';\n    }\n    static get code() {\n        return 'ERR_JOSE_NOT_SUPPORTED';\n    }\n}\nexport class JWEDecryptionFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_DECRYPTION_FAILED';\n        this.message = 'decryption operation failed';\n    }\n    static get code() {\n        return 'ERR_JWE_DECRYPTION_FAILED';\n    }\n}\nexport class JWEInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWE_INVALID';\n    }\n}\nexport class JWSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWS_INVALID';\n    }\n}\nexport class JWTInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWT_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWT_INVALID';\n    }\n}\nexport class JWKInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWK_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWK_INVALID';\n    }\n}\nexport class JWKSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWKS_INVALID';\n    }\n}\nexport class JWKSNoMatchingKey extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_NO_MATCHING_KEY';\n        this.message = 'no applicable key found in the JSON Web Key Set';\n    }\n    static get code() {\n        return 'ERR_JWKS_NO_MATCHING_KEY';\n    }\n}\nexport class JWKSMultipleMatchingKeys extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n        this.message = 'multiple matching keys found in the JSON Web Key Set';\n    }\n    static get code() {\n        return 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    }\n}\nSymbol.asyncIterator;\nexport class JWKSTimeout extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_TIMEOUT';\n        this.message = 'request timed out';\n    }\n    static get code() {\n        return 'ERR_JWKS_TIMEOUT';\n    }\n}\nexport class JWSSignatureVerificationFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n        this.message = 'signature verification failed';\n    }\n    static get code() {\n        return 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    }\n}\n","export default crypto;\nexport const isCryptoKey = (key) => key instanceof CryptoKey;\n","function unusable(name, prop = 'algorithm.name') {\n    return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);\n}\nfunction isAlgorithm(algorithm, name) {\n    return algorithm.name === name;\n}\nfunction getHashLength(hash) {\n    return parseInt(hash.name.slice(4), 10);\n}\nfunction getNamedCurve(alg) {\n    switch (alg) {\n        case 'ES256':\n            return 'P-256';\n        case 'ES384':\n            return 'P-384';\n        case 'ES512':\n            return 'P-521';\n        default:\n            throw new Error('unreachable');\n    }\n}\nfunction checkUsage(key, usages) {\n    if (usages.length && !usages.some((expected) => key.usages.includes(expected))) {\n        let msg = 'CryptoKey does not support this operation, its usages must include ';\n        if (usages.length > 2) {\n            const last = usages.pop();\n            msg += `one of ${usages.join(', ')}, or ${last}.`;\n        }\n        else if (usages.length === 2) {\n            msg += `one of ${usages[0]} or ${usages[1]}.`;\n        }\n        else {\n            msg += `${usages[0]}.`;\n        }\n        throw new TypeError(msg);\n    }\n}\nexport function checkSigCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512': {\n            if (!isAlgorithm(key.algorithm, 'HMAC'))\n                throw unusable('HMAC');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'RS256':\n        case 'RS384':\n        case 'RS512': {\n            if (!isAlgorithm(key.algorithm, 'RSASSA-PKCS1-v1_5'))\n                throw unusable('RSASSA-PKCS1-v1_5');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'PS256':\n        case 'PS384':\n        case 'PS512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-PSS'))\n                throw unusable('RSA-PSS');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'EdDSA': {\n            if (key.algorithm.name !== 'Ed25519' && key.algorithm.name !== 'Ed448') {\n                throw unusable('Ed25519 or Ed448');\n            }\n            break;\n        }\n        case 'ES256':\n        case 'ES384':\n        case 'ES512': {\n            if (!isAlgorithm(key.algorithm, 'ECDSA'))\n                throw unusable('ECDSA');\n            const expected = getNamedCurve(alg);\n            const actual = key.algorithm.namedCurve;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.namedCurve');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\nexport function checkEncCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM': {\n            if (!isAlgorithm(key.algorithm, 'AES-GCM'))\n                throw unusable('AES-GCM');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (!isAlgorithm(key.algorithm, 'AES-KW'))\n                throw unusable('AES-KW');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'ECDH': {\n            switch (key.algorithm.name) {\n                case 'ECDH':\n                case 'X25519':\n                case 'X448':\n                    break;\n                default:\n                    throw unusable('ECDH, X25519, or X448');\n            }\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW':\n            if (!isAlgorithm(key.algorithm, 'PBKDF2'))\n                throw unusable('PBKDF2');\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-OAEP'))\n                throw unusable('RSA-OAEP');\n            const expected = parseInt(alg.slice(9), 10) || 1;\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\n","function message(msg, actual, ...types) {\n    types = types.filter(Boolean);\n    if (types.length > 2) {\n        const last = types.pop();\n        msg += `one of type ${types.join(', ')}, or ${last}.`;\n    }\n    else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}.`;\n    }\n    else {\n        msg += `of type ${types[0]}.`;\n    }\n    if (actual == null) {\n        msg += ` Received ${actual}`;\n    }\n    else if (typeof actual === 'function' && actual.name) {\n        msg += ` Received function ${actual.name}`;\n    }\n    else if (typeof actual === 'object' && actual != null) {\n        if (actual.constructor?.name) {\n            msg += ` Received an instance of ${actual.constructor.name}`;\n        }\n    }\n    return msg;\n}\nexport default (actual, ...types) => {\n    return message('Key must be ', actual, ...types);\n};\nexport function withAlg(alg, actual, ...types) {\n    return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}\n","import { isCryptoKey } from './webcrypto.js';\nexport default (key) => {\n    if (isCryptoKey(key)) {\n        return true;\n    }\n    return key?.[Symbol.toStringTag] === 'KeyObject';\n};\nexport const types = ['CryptoKey'];\n","function isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nexport default function isObject(input) {\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n}\n","import isObject from './is_object.js';\nexport function isJWK(key) {\n    return isObject(key) && typeof key.kty === 'string';\n}\nexport function isPrivateJWK(key) {\n    return key.kty !== 'oct' && typeof key.d === 'string';\n}\nexport function isPublicJWK(key) {\n    return key.kty !== 'oct' && typeof key.d === 'undefined';\n}\nexport function isSecretJWK(key) {\n    return isJWK(key) && key.kty === 'oct' && typeof key.k === 'string';\n}\n","import crypto from './webcrypto.js';\nimport { JOSENotSupported } from '../util/errors.js';\nfunction subtleMapping(jwk) {\n    let algorithm;\n    let keyUsages;\n    switch (jwk.kty) {\n        case 'RSA': {\n            switch (jwk.alg) {\n                case 'PS256':\n                case 'PS384':\n                case 'PS512':\n                    algorithm = { name: 'RSA-PSS', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RS256':\n                case 'RS384':\n                case 'RS512':\n                    algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RSA-OAEP':\n                case 'RSA-OAEP-256':\n                case 'RSA-OAEP-384':\n                case 'RSA-OAEP-512':\n                    algorithm = {\n                        name: 'RSA-OAEP',\n                        hash: `SHA-${parseInt(jwk.alg.slice(-3), 10) || 1}`,\n                    };\n                    keyUsages = jwk.d ? ['decrypt', 'unwrapKey'] : ['encrypt', 'wrapKey'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'EC': {\n            switch (jwk.alg) {\n                case 'ES256':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES384':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES512':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: 'ECDH', namedCurve: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'OKP': {\n            switch (jwk.alg) {\n                case 'EdDSA':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"kty\" (Key Type) Parameter value');\n    }\n    return { algorithm, keyUsages };\n}\nconst parse = async (jwk) => {\n    if (!jwk.alg) {\n        throw new TypeError('\"alg\" argument is required when \"jwk.alg\" is not present');\n    }\n    const { algorithm, keyUsages } = subtleMapping(jwk);\n    const rest = [\n        algorithm,\n        jwk.ext ?? false,\n        jwk.key_ops ?? keyUsages,\n    ];\n    const keyData = { ...jwk };\n    delete keyData.alg;\n    delete keyData.use;\n    return crypto.subtle.importKey('jwk', keyData, ...rest);\n};\nexport default parse;\n","import { isJWK } from '../lib/is_jwk.js';\nimport { decode } from './base64url.js';\nimport importJWK from './jwk_to_key.js';\nconst exportKeyValue = (k) => decode(k);\nlet privCache;\nlet pubCache;\nconst isKeyObject = (key) => {\n    return key?.[Symbol.toStringTag] === 'KeyObject';\n};\nconst importAndCache = async (cache, key, jwk, alg, freeze = false) => {\n    let cached = cache.get(key);\n    if (cached?.[alg]) {\n        return cached[alg];\n    }\n    const cryptoKey = await importJWK({ ...jwk, alg });\n    if (freeze)\n        Object.freeze(key);\n    if (!cached) {\n        cache.set(key, { [alg]: cryptoKey });\n    }\n    else {\n        cached[alg] = cryptoKey;\n    }\n    return cryptoKey;\n};\nconst normalizePublicKey = (key, alg) => {\n    if (isKeyObject(key)) {\n        let jwk = key.export({ format: 'jwk' });\n        delete jwk.d;\n        delete jwk.dp;\n        delete jwk.dq;\n        delete jwk.p;\n        delete jwk.q;\n        delete jwk.qi;\n        if (jwk.k) {\n            return exportKeyValue(jwk.k);\n        }\n        pubCache || (pubCache = new WeakMap());\n        return importAndCache(pubCache, key, jwk, alg);\n    }\n    if (isJWK(key)) {\n        if (key.k)\n            return decode(key.k);\n        pubCache || (pubCache = new WeakMap());\n        const cryptoKey = importAndCache(pubCache, key, key, alg, true);\n        return cryptoKey;\n    }\n    return key;\n};\nconst normalizePrivateKey = (key, alg) => {\n    if (isKeyObject(key)) {\n        let jwk = key.export({ format: 'jwk' });\n        if (jwk.k) {\n            return exportKeyValue(jwk.k);\n        }\n        privCache || (privCache = new WeakMap());\n        return importAndCache(privCache, key, jwk, alg);\n    }\n    if (isJWK(key)) {\n        if (key.k)\n            return decode(key.k);\n        privCache || (privCache = new WeakMap());\n        const cryptoKey = importAndCache(privCache, key, key, alg, true);\n        return cryptoKey;\n    }\n    return key;\n};\nexport default { normalizePublicKey, normalizePrivateKey };\n","import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getVerifyKey from './get_sign_verify_key.js';\nconst verify = async (alg, key, signature, data) => {\n    const cryptoKey = await getVerifyKey(alg, key, 'verify');\n    checkKeyLength(alg, cryptoKey);\n    const algorithm = subtleAlgorithm(alg, cryptoKey.algorithm);\n    try {\n        return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);\n    }\n    catch {\n        return false;\n    }\n};\nexport default verify;\n","import crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkSigCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nimport normalize from './normalize_key.js';\nexport default async function getCryptoKey(alg, key, usage) {\n    if (usage === 'sign') {\n        key = await normalize.normalizePrivateKey(key, alg);\n    }\n    if (usage === 'verify') {\n        key = await normalize.normalizePublicKey(key, alg);\n    }\n    if (isCryptoKey(key)) {\n        checkSigCryptoKey(key, alg, usage);\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        if (!alg.startsWith('HS')) {\n            throw new TypeError(invalidKeyInput(key, ...types));\n        }\n        return crypto.subtle.importKey('raw', key, { hash: `SHA-${alg.slice(-3)}`, name: 'HMAC' }, false, [usage]);\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array', 'JSON Web Key'));\n}\n","export default (alg, key) => {\n    if (alg.startsWith('RS') || alg.startsWith('PS')) {\n        const { modulusLength } = key.algorithm;\n        if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n            throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\n        }\n    }\n};\n","import { JOSENotSupported } from '../util/errors.js';\nexport default function subtleDsa(alg, algorithm) {\n    const hash = `SHA-${alg.slice(-3)}`;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n            return { hash, name: 'HMAC' };\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            return { hash, name: 'RSA-PSS', saltLength: alg.slice(-3) >> 3 };\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            return { hash, name: 'RSASSA-PKCS1-v1_5' };\n        case 'ES256':\n        case 'ES384':\n        case 'ES512':\n            return { hash, name: 'ECDSA', namedCurve: algorithm.namedCurve };\n        case 'EdDSA':\n            return { name: algorithm.name };\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n","const isDisjoint = (...headers) => {\n    const sources = headers.filter(Boolean);\n    if (sources.length === 0 || sources.length === 1) {\n        return true;\n    }\n    let acc;\n    for (const header of sources) {\n        const parameters = Object.keys(header);\n        if (!acc || acc.size === 0) {\n            acc = new Set(parameters);\n            continue;\n        }\n        for (const parameter of parameters) {\n            if (acc.has(parameter)) {\n                return false;\n            }\n            acc.add(parameter);\n        }\n    }\n    return true;\n};\nexport default isDisjoint;\n","import { withAlg as invalidKeyInput } from './invalid_key_input.js';\nimport isKeyLike, { types } from '../runtime/is_key_like.js';\nimport * as jwk from './is_jwk.js';\nconst tag = (key) => key?.[Symbol.toStringTag];\nconst jwkMatchesOp = (alg, key, usage) => {\n    if (key.use !== undefined && key.use !== 'sig') {\n        throw new TypeError('Invalid key for this operation, when present its use must be sig');\n    }\n    if (key.key_ops !== undefined && key.key_ops.includes?.(usage) !== true) {\n        throw new TypeError(`Invalid key for this operation, when present its key_ops must include ${usage}`);\n    }\n    if (key.alg !== undefined && key.alg !== alg) {\n        throw new TypeError(`Invalid key for this operation, when present its alg must be ${alg}`);\n    }\n    return true;\n};\nconst symmetricTypeCheck = (alg, key, usage, allowJwk) => {\n    if (key instanceof Uint8Array)\n        return;\n    if (allowJwk && jwk.isJWK(key)) {\n        if (jwk.isSecretJWK(key) && jwkMatchesOp(alg, key, usage))\n            return;\n        throw new TypeError(`JSON Web Key for symmetric algorithms must have JWK \"kty\" (Key Type) equal to \"oct\" and the JWK \"k\" (Key Value) present`);\n    }\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types, 'Uint8Array', allowJwk ? 'JSON Web Key' : null));\n    }\n    if (key.type !== 'secret') {\n        throw new TypeError(`${tag(key)} instances for symmetric algorithms must be of type \"secret\"`);\n    }\n};\nconst asymmetricTypeCheck = (alg, key, usage, allowJwk) => {\n    if (allowJwk && jwk.isJWK(key)) {\n        switch (usage) {\n            case 'sign':\n                if (jwk.isPrivateJWK(key) && jwkMatchesOp(alg, key, usage))\n                    return;\n                throw new TypeError(`JSON Web Key for this operation be a private JWK`);\n            case 'verify':\n                if (jwk.isPublicJWK(key) && jwkMatchesOp(alg, key, usage))\n                    return;\n                throw new TypeError(`JSON Web Key for this operation be a public JWK`);\n        }\n    }\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types, allowJwk ? 'JSON Web Key' : null));\n    }\n    if (key.type === 'secret') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithms must not be of type \"secret\"`);\n    }\n    if (usage === 'sign' && key.type === 'public') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm signing must be of type \"private\"`);\n    }\n    if (usage === 'decrypt' && key.type === 'public') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm decryption must be of type \"private\"`);\n    }\n    if (key.algorithm && usage === 'verify' && key.type === 'private') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm verifying must be of type \"public\"`);\n    }\n    if (key.algorithm && usage === 'encrypt' && key.type === 'private') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm encryption must be of type \"public\"`);\n    }\n};\nfunction checkKeyType(allowJwk, alg, key, usage) {\n    const symmetric = alg.startsWith('HS') ||\n        alg === 'dir' ||\n        alg.startsWith('PBES2') ||\n        /^A\\d{3}(?:GCM)?KW$/.test(alg);\n    if (symmetric) {\n        symmetricTypeCheck(alg, key, usage, allowJwk);\n    }\n    else {\n        asymmetricTypeCheck(alg, key, usage, allowJwk);\n    }\n}\nexport default checkKeyType.bind(undefined, false);\nexport const checkKeyTypeWithJwk = checkKeyType.bind(undefined, true);\n","import { JOSENotSupported } from '../util/errors.js';\nfunction validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {\n    if (joseHeader.crit !== undefined && protectedHeader?.crit === undefined) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n    }\n    if (!protectedHeader || protectedHeader.crit === undefined) {\n        return new Set();\n    }\n    if (!Array.isArray(protectedHeader.crit) ||\n        protectedHeader.crit.length === 0 ||\n        protectedHeader.crit.some((input) => typeof input !== 'string' || input.length === 0)) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n    }\n    let recognized;\n    if (recognizedOption !== undefined) {\n        recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);\n    }\n    else {\n        recognized = recognizedDefault;\n    }\n    for (const parameter of protectedHeader.crit) {\n        if (!recognized.has(parameter)) {\n            throw new JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n        }\n        if (joseHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n        }\n        if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n        }\n    }\n    return new Set(protectedHeader.crit);\n}\nexport default validateCrit;\n","const validateAlgorithms = (option, algorithms) => {\n    if (algorithms !== undefined &&\n        (!Array.isArray(algorithms) || algorithms.some((s) => typeof s !== 'string'))) {\n        throw new TypeError(`\"${option}\" option must be an array of strings`);\n    }\n    if (!algorithms) {\n        return undefined;\n    }\n    return new Set(algorithms);\n};\nexport default validateAlgorithms;\n","import { decode as base64url } from '../../runtime/base64url.js';\nimport verify from '../../runtime/verify.js';\nimport { JOSEAlgNotAllowed, JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport { concat, encoder, decoder } from '../../lib/buffer_utils.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport { checkKeyTypeWithJwk } from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nimport { isJWK } from '../../lib/is_jwk.js';\nimport { importJWK } from '../../key/import.js';\nexport async function flattenedVerify(jws, key, options) {\n    if (!isObject(jws)) {\n        throw new JWSInvalid('Flattened JWS must be an object');\n    }\n    if (jws.protected === undefined && jws.header === undefined) {\n        throw new JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\n    }\n    if (jws.protected !== undefined && typeof jws.protected !== 'string') {\n        throw new JWSInvalid('JWS Protected Header incorrect type');\n    }\n    if (jws.payload === undefined) {\n        throw new JWSInvalid('JWS Payload missing');\n    }\n    if (typeof jws.signature !== 'string') {\n        throw new JWSInvalid('JWS Signature missing or incorrect type');\n    }\n    if (jws.header !== undefined && !isObject(jws.header)) {\n        throw new JWSInvalid('JWS Unprotected Header incorrect type');\n    }\n    let parsedProt = {};\n    if (jws.protected) {\n        try {\n            const protectedHeader = base64url(jws.protected);\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch {\n            throw new JWSInvalid('JWS Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jws.header)) {\n        throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jws.header,\n    };\n    const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options?.crit, parsedProt, joseHeader);\n    let b64 = true;\n    if (extensions.has('b64')) {\n        b64 = parsedProt.b64;\n        if (typeof b64 !== 'boolean') {\n            throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n        }\n    }\n    const { alg } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    const algorithms = options && validateAlgorithms('algorithms', options.algorithms);\n    if (algorithms && !algorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter value not allowed');\n    }\n    if (b64) {\n        if (typeof jws.payload !== 'string') {\n            throw new JWSInvalid('JWS Payload must be a string');\n        }\n    }\n    else if (typeof jws.payload !== 'string' && !(jws.payload instanceof Uint8Array)) {\n        throw new JWSInvalid('JWS Payload must be a string or an Uint8Array instance');\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jws);\n        resolvedKey = true;\n        checkKeyTypeWithJwk(alg, key, 'verify');\n        if (isJWK(key)) {\n            key = await importJWK(key, alg);\n        }\n    }\n    else {\n        checkKeyTypeWithJwk(alg, key, 'verify');\n    }\n    const data = concat(encoder.encode(jws.protected ?? ''), encoder.encode('.'), typeof jws.payload === 'string' ? encoder.encode(jws.payload) : jws.payload);\n    let signature;\n    try {\n        signature = base64url(jws.signature);\n    }\n    catch {\n        throw new JWSInvalid('Failed to base64url decode the signature');\n    }\n    const verified = await verify(alg, key, signature, data);\n    if (!verified) {\n        throw new JWSSignatureVerificationFailed();\n    }\n    let payload;\n    if (b64) {\n        try {\n            payload = base64url(jws.payload);\n        }\n        catch {\n            throw new JWSInvalid('Failed to base64url decode the payload');\n        }\n    }\n    else if (typeof jws.payload === 'string') {\n        payload = encoder.encode(jws.payload);\n    }\n    else {\n        payload = jws.payload;\n    }\n    const result = { payload };\n    if (jws.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jws.header !== undefined) {\n        result.unprotectedHeader = jws.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\n","import { decode as decodeBase64URL } from '../runtime/base64url.js';\nimport { fromSPKI, fromPKCS8, fromX509 } from '../runtime/asn1.js';\nimport asKeyObject from '../runtime/jwk_to_key.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nexport async function importSPKI(spki, alg, options) {\n    if (typeof spki !== 'string' || spki.indexOf('-----BEGIN PUBLIC KEY-----') !== 0) {\n        throw new TypeError('\"spki\" must be SPKI formatted string');\n    }\n    return fromSPKI(spki, alg, options);\n}\nexport async function importX509(x509, alg, options) {\n    if (typeof x509 !== 'string' || x509.indexOf('-----BEGIN CERTIFICATE-----') !== 0) {\n        throw new TypeError('\"x509\" must be X.509 formatted string');\n    }\n    return fromX509(x509, alg, options);\n}\nexport async function importPKCS8(pkcs8, alg, options) {\n    if (typeof pkcs8 !== 'string' || pkcs8.indexOf('-----BEGIN PRIVATE KEY-----') !== 0) {\n        throw new TypeError('\"pkcs8\" must be PKCS#8 formatted string');\n    }\n    return fromPKCS8(pkcs8, alg, options);\n}\nexport async function importJWK(jwk, alg) {\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    alg || (alg = jwk.alg);\n    switch (jwk.kty) {\n        case 'oct':\n            if (typeof jwk.k !== 'string' || !jwk.k) {\n                throw new TypeError('missing \"k\" (Key Value) Parameter value');\n            }\n            return decodeBase64URL(jwk.k);\n        case 'RSA':\n            if (jwk.oth !== undefined) {\n                throw new JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\n            }\n        case 'EC':\n        case 'OKP':\n            return asKeyObject({ ...jwk, alg });\n        default:\n            throw new JOSENotSupported('Unsupported \"kty\" (Key Type) Parameter value');\n    }\n}\n","export default (date) => Math.floor(date.getTime() / 1000);\n","const minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\+|\\-)? ?(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)(?: (ago|from now))?$/i;\nexport default (str) => {\n    const matched = REGEX.exec(str);\n    if (!matched || (matched[4] && matched[1])) {\n        throw new TypeError('Invalid time period format');\n    }\n    const value = parseFloat(matched[2]);\n    const unit = matched[3].toLowerCase();\n    let numericDate;\n    switch (unit) {\n        case 'sec':\n        case 'secs':\n        case 'second':\n        case 'seconds':\n        case 's':\n            numericDate = Math.round(value);\n            break;\n        case 'minute':\n        case 'minutes':\n        case 'min':\n        case 'mins':\n        case 'm':\n            numericDate = Math.round(value * minute);\n            break;\n        case 'hour':\n        case 'hours':\n        case 'hr':\n        case 'hrs':\n        case 'h':\n            numericDate = Math.round(value * hour);\n            break;\n        case 'day':\n        case 'days':\n        case 'd':\n            numericDate = Math.round(value * day);\n            break;\n        case 'week':\n        case 'weeks':\n        case 'w':\n            numericDate = Math.round(value * week);\n            break;\n        default:\n            numericDate = Math.round(value * year);\n            break;\n    }\n    if (matched[1] === '-' || matched[4] === 'ago') {\n        return -numericDate;\n    }\n    return numericDate;\n};\n","import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\nimport { decoder } from './buffer_utils.js';\nimport epoch from './epoch.js';\nimport secs from './secs.js';\nimport isObject from './is_object.js';\nconst normalizeTyp = (value) => value.toLowerCase().replace(/^application\\//, '');\nconst checkAudiencePresence = (audPayload, audOption) => {\n    if (typeof audPayload === 'string') {\n        return audOption.includes(audPayload);\n    }\n    if (Array.isArray(audPayload)) {\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n    }\n    return false;\n};\nexport default (protectedHeader, encodedPayload, options = {}) => {\n    let payload;\n    try {\n        payload = JSON.parse(decoder.decode(encodedPayload));\n    }\n    catch {\n    }\n    if (!isObject(payload)) {\n        throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\n    }\n    const { typ } = options;\n    if (typ &&\n        (typeof protectedHeader.typ !== 'string' ||\n            normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n        throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', payload, 'typ', 'check_failed');\n    }\n    const { requiredClaims = [], issuer, subject, audience, maxTokenAge } = options;\n    const presenceCheck = [...requiredClaims];\n    if (maxTokenAge !== undefined)\n        presenceCheck.push('iat');\n    if (audience !== undefined)\n        presenceCheck.push('aud');\n    if (subject !== undefined)\n        presenceCheck.push('sub');\n    if (issuer !== undefined)\n        presenceCheck.push('iss');\n    for (const claim of new Set(presenceCheck.reverse())) {\n        if (!(claim in payload)) {\n            throw new JWTClaimValidationFailed(`missing required \"${claim}\" claim`, payload, claim, 'missing');\n        }\n    }\n    if (issuer &&\n        !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n        throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', payload, 'iss', 'check_failed');\n    }\n    if (subject && payload.sub !== subject) {\n        throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', payload, 'sub', 'check_failed');\n    }\n    if (audience &&\n        !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n        throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', payload, 'aud', 'check_failed');\n    }\n    let tolerance;\n    switch (typeof options.clockTolerance) {\n        case 'string':\n            tolerance = secs(options.clockTolerance);\n            break;\n        case 'number':\n            tolerance = options.clockTolerance;\n            break;\n        case 'undefined':\n            tolerance = 0;\n            break;\n        default:\n            throw new TypeError('Invalid clockTolerance option type');\n    }\n    const { currentDate } = options;\n    const now = epoch(currentDate || new Date());\n    if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== 'number') {\n        throw new JWTClaimValidationFailed('\"iat\" claim must be a number', payload, 'iat', 'invalid');\n    }\n    if (payload.nbf !== undefined) {\n        if (typeof payload.nbf !== 'number') {\n            throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', payload, 'nbf', 'invalid');\n        }\n        if (payload.nbf > now + tolerance) {\n            throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', payload, 'nbf', 'check_failed');\n        }\n    }\n    if (payload.exp !== undefined) {\n        if (typeof payload.exp !== 'number') {\n            throw new JWTClaimValidationFailed('\"exp\" claim must be a number', payload, 'exp', 'invalid');\n        }\n        if (payload.exp <= now - tolerance) {\n            throw new JWTExpired('\"exp\" claim timestamp check failed', payload, 'exp', 'check_failed');\n        }\n    }\n    if (maxTokenAge) {\n        const age = now - payload.iat;\n        const max = typeof maxTokenAge === 'number' ? maxTokenAge : secs(maxTokenAge);\n        if (age - tolerance > max) {\n            throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', payload, 'iat', 'check_failed');\n        }\n        if (age < 0 - tolerance) {\n            throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', payload, 'iat', 'check_failed');\n        }\n    }\n    return payload;\n};\n","import { compactVerify } from '../jws/compact/verify.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTInvalid } from '../util/errors.js';\nexport async function jwtVerify(jwt, key, options) {\n    const verified = await compactVerify(jwt, key, options);\n    if (verified.protectedHeader.crit?.includes('b64') && verified.protectedHeader.b64 === false) {\n        throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n    }\n    const payload = jwtPayload(verified.protectedHeader, verified.payload, options);\n    const result = { payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n","import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactVerify(jws, key, options) {\n    if (jws instanceof Uint8Array) {\n        jws = decoder.decode(jws);\n    }\n    if (typeof jws !== 'string') {\n        throw new JWSInvalid('Compact JWS must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split('.');\n    if (length !== 3) {\n        throw new JWSInvalid('Invalid Compact JWS');\n    }\n    const verified = await flattenedVerify({ payload, protected: protectedHeader, signature }, key, options);\n    const result = { payload: verified.payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n","import '../../../css/login.css';\nimport loginIco from '../../../images/icons/loginIcon.png';\nimport { handleLogin } from '../../bCaller/loginApi';\nimport { jwtVerify } from 'jose';\nimport loaderNewGif from '../../../images/icons/loaderNew.gif';\n// // import '../../../../../manifest.json';\n// //cloudflare turnstile\n// const cloudRecapcha = document.createElement('div');// Assign class\n// cloudRecapcha.className = 'cf-turnstile';\n\n// // Assign attributes\n// cloudRecapcha.setAttribute('data-sitekey', '0x4AAAAAAAw65at_XTmUV7qj');\n// // cloudRecapcha.setAttribute('data-callback', 'javascriptCallback');\n\n// //\n    export const wrapper = document.createElement('form');\n    const header = document.createElement('div');\n    export const middleInputsHolder = document.createElement('div');\n    const bottomInputsHolder = document.createElement('div');\n    const signupHolder = document.createElement('a');\n   export  const emailGroup = document.createElement('div');\n    const pwdGroup = document.createElement('div');\n    const emailLabel = document.createElement('label');\n    const passwordLabel = document.createElement('label');\n    const logoImg = document.createElement('img');\n    const infoText = document.createElement('p');\n    const simpleNota = document.createElement('p');\n    const loginH1 = document.createElement('h1');\n   export  const email = document.createElement('input');\n   export  const password = document.createElement('input');\n    export const loginButton = document.createElement('button');\n    const forgotPwd = document.createElement('a');\n    const signupText = document.createElement('p');\n    const signupLink = document.createElement('a');\n    const Eplaceholder_label = document.createElement('label');\n    const Pplaceholder_label = document.createElement('label');\n    export const result = document.createElement('p');\n    export const loader = document.createElement('span');\n    const loaderImg = document.createElement('img');\n    loaderImg.src = loaderNewGif;\n    loaderImg.classList = \"loaderImg\";\n    loader.appendChild(loaderImg);\n    loader.classList = \"loader\";\n    wrapper.classList = \"wrapper\";\n    header.classList = \"header\";\n    middleInputsHolder.classList = \"middleInputsHolder\";\n    bottomInputsHolder.classList = \"bottomInputsHolder\";\n    signupHolder.classList = \"signupHolder\";\n    logoImg.classList = \"logoImg\";\n    infoText.classList = \"infoText\";\n    simpleNota.classList = \"simpleNota\";\n    email.classList = \"commonInput\";\n    password.classList = \"commonInput\";\n    loginButton.classList = \"loginButton\";\n    forgotPwd.classList = \"forgotPwd\";\n    signupLink.classList = \"signupLink\";\n    signupText.classList = \"signupText\";\n    loginH1.classList = \"loginH1\";\n    emailGroup.classList = \"emailGroup\";\n    pwdGroup.classList = \"pwdGroup\";\n    emailLabel.classList = \"emailLabel\";\n    passwordLabel.classList = \"passwordLabel\";\n    email.placeholder = \"\";\n    email.type = \"text\";\n    email.id = \"email\";\n    password.placeholder = \"\";\n    password.type = \"password\";\n    password.id = \"password\";\n    logoImg.src = loginIco;\n    loginButton.innerText = \"Login\";\n    loginButton.disabled = false;\n    loginButton.style.cursor = 'not-allowed';\n    loginH1.innerText = \"Login\";\n    signupLink.innerText = \"Sign Up\";\n    signupLink.href = \"/signup\";\n    signupText.innerText = \"Don't have an account?\";\n    forgotPwd.innerText = \"Forgot Password?\";\n    forgotPwd.href = \"/forgot\";\n    infoText.innerText = \"Please login to access cashly service\";\n    emailLabel.setAttribute('for', 'email');\n    passwordLabel.setAttribute('for', 'email');\n    emailLabel.innerText  = \"Email\";\n    passwordLabel.innerText = \"Password\";\n    header.appendChild(logoImg);\n    header.appendChild(loginH1);\n    header.appendChild(infoText);\n    emailGroup.appendChild(email);\n    emailGroup.appendChild(emailLabel);\n    pwdGroup.appendChild(password);\n    pwdGroup.appendChild(passwordLabel);\n    middleInputsHolder.appendChild(emailGroup);\n    middleInputsHolder.appendChild(pwdGroup);\n    middleInputsHolder.appendChild(forgotPwd);\n    signupHolder.appendChild(signupText);\n    signupHolder.appendChild(signupLink);\n    bottomInputsHolder.appendChild(loginButton);\n    bottomInputsHolder.appendChild(signupHolder);\n    wrapper.appendChild(header);\n    wrapper.appendChild(middleInputsHolder);\n    // wrapper.appendChild(cloudRecapcha);\n    wrapper.appendChild(bottomInputsHolder);\n    document.body.appendChild(wrapper);\n//append 2fa page after login button click\n\nloginButton.addEventListener('click',()=>{\nhandleLogin();\n});\n\n    async function verifyJWT(token) {\n      const secretKey = new TextEncoder().encode(\"G$8a9Zq5@dR3^yX!7wKj*Ue2#fH6%tLp\"); // Replace with your actual secret key\n  \n      try {\n          // Verifying the token with the secret key\n          const { payload } = await jwtVerify(token, secretKey);\n  \n          console.log('Token is valid:', payload);\n  \n          // If verification is successful, continue loading the dashboard\n          return true;\n      } catch (error) {\n          console.error('Token verification failed:', error);\n  \n          // If the token is invalid, redirect to the login page\n          return false;\n      }\n  }\n  \n  // Function to get token from cookies\n  function getTokenFromCookie() {\n      const name = 'token=';\n      const decodedCookie = decodeURIComponent(document.cookie);\n      const cookieArray = decodedCookie.split(';');\n  \n      for (let cookie of cookieArray) {\n          cookie = cookie.trim();\n          if (cookie.startsWith(name)) {\n              return cookie.substring(name.length);\n          }\n      }\n      return null; // Return null if no token is found\n  }\n  \n  // Main function to check the token and verify it\n  async function checkAndVerifyToken() {\n      const token = getTokenFromCookie();\n      if (token) {\n          const isTokenValid = await verifyJWT(token);\n  \n          if (!isTokenValid) {\n              // Redirect to login page handled inside the verifyJWT function\n              return;\n          }\n          \n          // If the token is valid, you can proceed with loading the dashboard\n          console.log('Token verified, loading dashboard...');\n          window.location.href = '/dashboard'; // Replace with your login URL\n      } else {\n          // If no token is found, redirect to login\n          \n      }\n  }\n  \n  // Call the function on page load\n  checkAndVerifyToken();\n  // Turnstile success callback\nfunction onTurnstileSuccess(token) {\n    console.log('Turnstile completed successfully. Token:', token);\n    loginButton.disabled = false; // Enable the login button after reCAPTCHA is solved\n}"],"names":["handleLogin","loginButton","disabled","innerText","appendChild","loader","axios","post","username","email","value","password","then","response","data","code","result","payload","message","style","color","fontSize","middleInputsHolder","insertBefore","emailGroup","setTimeout","removeChild","jwt","resource","name","hours","expires","date","Date","setTime","getTime","toUTCString","document","cookie","setCookie","window","location","href","concat","encodeURIComponent","error","console","innerHTML","TextEncoder","decoder","TextDecoder","buffers","size","reduce","acc","length","buf","Uint8Array","i","buffer","set","decode","input","encoded","replace","binary","atob","bytes","charCodeAt","decodeBase64","TypeError","JOSEError","Error","constructor","super","this","captureStackTrace","JWTClaimValidationFailed","claim","reason","JWTExpired","JOSEAlgNotAllowed","arguments","JOSENotSupported","JWSInvalid","JWTInvalid","Symbol","asyncIterator","JWSSignatureVerificationFailed","isCryptoKey","key","CryptoKey","unusable","prop","isAlgorithm","algorithm","getHashLength","hash","parseInt","slice","checkUsage","usages","some","expected","includes","msg","last","pop","join","checkSigCryptoKey","alg","getNamedCurve","namedCurve","actual","types","filter","Boolean","withAlg","toStringTag","isObject","Object","prototype","toString","call","getPrototypeOf","proto","isJWK","kty","async","jwk","keyUsages","d","crv","subtleMapping","rest","ext","key_ops","keyData","use","subtle","importKey","exportKeyValue","k","privCache","pubCache","isKeyObject","importAndCache","cache","freeze","cached","get","cryptoKey","export","format","dp","dq","p","q","qi","WeakMap","signature","usage","startsWith","modulusLength","saltLength","verify","headers","sources","header","parameters","keys","parameter","has","add","Set","tag","jwkMatchesOp","undefined","symmetricTypeCheck","allowJwk","type","checkKeyType","test","asymmetricTypeCheck","bind","checkKeyTypeWithJwk","Err","recognizedDefault","recognizedOption","protectedHeader","joseHeader","crit","Array","isArray","recognized","Map","entries","option","algorithms","s","flattenedVerify","jws","options","protected","parsedProt","JSON","parse","b64","resolvedKey","oth","importJWK","encode","unprotectedHeader","day","hour","REGEX","str","matched","exec","parseFloat","numericDate","toLowerCase","Math","round","minute","normalizeTyp","encodedPayload","typ","requiredClaims","issuer","subject","audience","maxTokenAge","presenceCheck","push","reverse","iss","sub","audPayload","aud","audOption","tolerance","clockTolerance","secs","currentDate","now","floor","iat","nbf","exp","age","jwtVerify","verified","split","compactVerify","_regeneratorRuntime","e","t","r","n","hasOwnProperty","o","defineProperty","a","iterator","c","u","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","h","l","f","y","GeneratorFunction","GeneratorFunctionPrototype","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","Promise","prev","charAt","stop","rval","handle","complete","finish","delegateYield","_createForOfIteratorHelper","_arrayLikeToArray","from","_unsupportedIterableToArray","_n","F","asyncGeneratorStep","_asyncToGenerator","apply","_next","_throw","wrapper","createElement","bottomInputsHolder","signupHolder","pwdGroup","emailLabel","passwordLabel","logoImg","infoText","simpleNota","loginH1","forgotPwd","signupText","signupLink","loaderImg","verifyJWT","_x","_verifyJWT","_callee","token","secretKey","_yield$jwtVerify","_context","log","t0","getTokenFromCookie","_step","_iterator","decodeURIComponent","trim","substring","err","_checkAndVerifyToken","_callee2","_context2","src","loaderNewGif","classList","placeholder","id","loginIco","cursor","setAttribute","body","addEventListener","checkAndVerifyToken"],"sourceRoot":""}
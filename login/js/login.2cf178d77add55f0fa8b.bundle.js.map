{"version":3,"file":"login/js/login.2cf178d77add55f0fa8b.bundle.js","mappings":"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","sources":["webpack://ahmed/./src/assets/js/bCaller/loginApi.js","webpack://ahmed/./src/assets/js/modules/login/index.js"],"sourcesContent":["import axios from \"axios\";\nimport { wrapper } from \"../modules/login\";\nimport { emailGroup, email, password, result, middleInputsHolder, loginButton, loader } from \"../modules/login\";\n\n// Function to set the cookie with an expiration time of 4 hours\n\nconst setCookie = (name, value, hours) => {\n  let expires = \"\";\n  if (hours) {\n    const date = new Date();\n    date.setTime(date.getTime() + (hours * 60 * 60 * 1000)); // Convert hours to milliseconds\n    expires = \"; expires=\" + date.toUTCString();\n  }\n  document.cookie = name + \"=\" + (value || \"\") + expires + \"; path=/\";\n};\n\nexport const handleLogin = () => {\n  loginButton.disabled = true;\n  loginButton.innerText = \"\";\n  loginButton.appendChild(loader);\n  axios.post('https://api.cashly.me/login', {\n      username: email.value,\n      password: password.value,\n    })\n    .then(response => {\n      const data = response.data;\n      if (data.response.code === 0) {\n        result.innerText = data.response.payload.message;\n        result.style.color = '#ff8383';\n        result.style.fontSize = 'large';\n        middleInputsHolder.insertBefore(result, emailGroup);\n        setTimeout(() => {\n          result.innerText = \"\";\n          result.style.color = '';\n          middleInputsHolder.removeChild(result);\n        }, 5000);\n      } else {\n        const jwt = data.response.payload.resource;\n        result.innerText = data.response.payload.message;\n        result.style.color = '';\n // Save the token to a cookie with a 4-hour expiry\n setCookie('token', jwt, 4);\n//  createOtpForm(wrapper);\n///window.location.href = `/dashboard?token=${encodeURIComponent(jwt)}&email=${encodeURIComponent(email.value)}`; \n        window.location.href = `/otp?token=${encodeURIComponent(jwt)}&email=${encodeURIComponent(email.value)}`;\n      }\n    })\n    .catch(error => {\n      console.error('There was a problem with the login operation:', error);\n    })\n    .finally(() => {\n      loginButton.disabled = false;\n      loginButton.innerHTML = 'Login';\n    });\n};\n","import '../../../css/login.css';\nimport loginIco from '../../../images/icons/loginIcon.png';\nimport backgroundImg from '../../../images/icons/background.png';\nimport { handleLogin } from '../../bCaller/loginApi';\nimport { jwtVerify } from 'jose';\nimport loaderNewGif from '../../../images/icons/loaderNew.gif';\n// // import '../../../../../manifest.json';\n// //cloudflare turnstile\n// const cloudRecapcha = document.createElement('div');// Assign class\n// cloudRecapcha.className = 'cf-turnstile';\n\n// // Assign attributes\n// cloudRecapcha.setAttribute('data-sitekey', '0x4AAAAAAAw65at_XTmUV7qj');\n// // cloudRecapcha.setAttribute('data-callback', 'javascriptCallback');\n\n// //\n    export const wrapper = document.createElement('form');\n    const header = document.createElement('div');\n    export const middleInputsHolder = document.createElement('div');\n    const bottomInputsHolder = document.createElement('div');\n    const signupHolder = document.createElement('a');\n   export  const emailGroup = document.createElement('div');\n    const pwdGroup = document.createElement('div');\n    const emailLabel = document.createElement('label');\n    const passwordLabel = document.createElement('label');\n    const logoImg = document.createElement('img');\n    const infoText = document.createElement('p');\n    const simpleNota = document.createElement('p');\n    const loginH1 = document.createElement('h1');\n   export  const email = document.createElement('input');\n   export  const password = document.createElement('input');\n    export const loginButton = document.createElement('button');\n    const forgotPwd = document.createElement('a');\n    const signupText = document.createElement('p');\n    const signupLink = document.createElement('a');\n    const Eplaceholder_label = document.createElement('label');\n    const Pplaceholder_label = document.createElement('label');\n    export const result = document.createElement('p');\n    export const loader = document.createElement('span');\n    const loaderImg = document.createElement('img');\n    loaderImg.src = loaderNewGif;\n    loaderImg.classList = \"loaderImg\";\n    loader.appendChild(loaderImg);\n    loader.classList = \"loader\";\n    wrapper.classList = \"wrapper\";\n    header.classList = \"header\";\n    middleInputsHolder.classList = \"middleInputsHolder\";\n    bottomInputsHolder.classList = \"bottomInputsHolder\";\n    signupHolder.classList = \"signupHolder\";\n    logoImg.classList = \"logoImg\";\n    infoText.classList = \"infoText\";\n    simpleNota.classList = \"simpleNota\";\n    email.classList = \"commonInput\";\n    password.classList = \"commonInput\";\n    loginButton.classList = \"loginButton\";\n    forgotPwd.classList = \"forgotPwd\";\n    signupLink.classList = \"signupLink\";\n    signupText.classList = \"signupText\";\n    loginH1.classList = \"loginH1\";\n    emailGroup.classList = \"emailGroup\";\n    pwdGroup.classList = \"pwdGroup\";\n    emailLabel.classList = \"emailLabel\";\n    passwordLabel.classList = \"passwordLabel\";\n    email.placeholder = \"\";\n    email.type = \"text\";\n    email.id = \"email\";\n    password.placeholder = \"\";\n    password.type = \"password\";\n    password.id = \"password\";\n    logoImg.src = loginIco;\n    loginButton.innerText = \"Login\";\n    loginButton.disabled = false;\n    loginButton.style.cursor = 'not-allowed';\n    loginH1.innerText = \"Login\";\n    signupLink.innerText = \"Sign Up\";\n    signupLink.href = \"/signup\";\n    signupText.innerText = \"Don't have an account?\";\n    forgotPwd.innerText = \"Forgot Password?\";\n    forgotPwd.href = \"/forgot\";\n    infoText.innerText = \"Please login to access cashly service\";\n    emailLabel.setAttribute('for', 'email');\n    passwordLabel.setAttribute('for', 'email');\n    emailLabel.innerText  = \"Email\";\n    passwordLabel.innerText = \"Password\";\ndocument.body.style.backgroundImage = `url(${backgroundImg})`;\n    header.appendChild(logoImg);\n    header.appendChild(loginH1);\n    header.appendChild(infoText);\n    emailGroup.appendChild(email);\n    emailGroup.appendChild(emailLabel);\n    pwdGroup.appendChild(password);\n    pwdGroup.appendChild(passwordLabel);\n    middleInputsHolder.appendChild(emailGroup);\n    middleInputsHolder.appendChild(pwdGroup);\n    middleInputsHolder.appendChild(forgotPwd);\n    signupHolder.appendChild(signupText);\n    signupHolder.appendChild(signupLink);\n    bottomInputsHolder.appendChild(loginButton);\n    bottomInputsHolder.appendChild(signupHolder);\n    wrapper.appendChild(header);\n    wrapper.appendChild(middleInputsHolder);\n    // wrapper.appendChild(cloudRecapcha);\n    wrapper.appendChild(bottomInputsHolder);\n    document.body.appendChild(wrapper);\n//append 2fa page after login button click\n\nloginButton.addEventListener('click',()=>{\nhandleLogin();\n});\n\n    async function verifyJWT(token) {\n      const secretKey = new TextEncoder().encode(\"G$8a9Zq5@dR3^yX!7wKj*Ue2#fH6%tLp\"); // Replace with your actual secret key\n  \n      try {\n          // Verifying the token with the secret key\n          const { payload } = await jwtVerify(token, secretKey);\n  \n          console.log('Token is valid:', payload);\n  \n          // If verification is successful, continue loading the dashboard\n          return true;\n      } catch (error) {\n          console.error('Token verification failed:', error);\n  \n          // If the token is invalid, redirect to the login page\n          return false;\n      }\n  }\n  \n  // Function to get token from cookies\n  function getTokenFromCookie() {\n      const name = 'token=';\n      const decodedCookie = decodeURIComponent(document.cookie);\n      const cookieArray = decodedCookie.split(';');\n  \n      for (let cookie of cookieArray) {\n          cookie = cookie.trim();\n          if (cookie.startsWith(name)) {\n              return cookie.substring(name.length);\n          }\n      }\n      return null; // Return null if no token is found\n  }\n  \n//   // Main function to check the token and verify it\n//   async function checkAndVerifyToken() {\n//       const token = getTokenFromCookie();\n//       if (token) {\n//           const isTokenValid = await verifyJWT(token);\n  \n//           if (!isTokenValid) {\n//               // Redirect to login page handled inside the verifyJWT function\n//               return;\n//           }\n          \n//           // If the token is valid, you can proceed with loading the dashboard\n//           console.log('Token verified, loading dashboard...');\n//           window.location.href = '/dashboard'; // Replace with your login URL\n//       } else {\n//           // If no token is found, redirect to login\n          \n//       }\n//   }\n  \n//   // Call the function on page load\n//   checkAndVerifyToken();\n//   // Turnstile success callback\n// function onTurnstileSuccess(token) {\n//     console.log('Turnstile completed successfully. Token:', token);\n//     loginButton.disabled = false; // Enable the login button after reCAPTCHA is solved\n// }"],"names":["handleLogin","loginButton","disabled","innerText","appendChild","loader","axios","post","username","email","value","password","then","response","data","code","result","payload","message","style","color","fontSize","middleInputsHolder","insertBefore","emailGroup","setTimeout","removeChild","jwt","resource","name","hours","expires","date","Date","setTime","getTime","toUTCString","document","cookie","setCookie","window","location","href","concat","encodeURIComponent","error","console","innerHTML","wrapper","createElement","header","bottomInputsHolder","signupHolder","pwdGroup","emailLabel","passwordLabel","logoImg","infoText","simpleNota","loginH1","forgotPwd","signupText","signupLink","loaderImg","src","loaderNewGif","classList","placeholder","type","id","loginIco","cursor","setAttribute","body","backgroundImage","backgroundImg","addEventListener"],"sourceRoot":""}
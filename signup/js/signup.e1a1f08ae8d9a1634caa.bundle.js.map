{"version":3,"file":"signup/js/signup.e1a1f08ae8d9a1634caa.bundle.js","mappings":"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","sources":["webpack://ahmed/./src/assets/js/signup.js","webpack://ahmed/./src/assets/js/bCaller/signupApi.js"],"sourcesContent":["import '../css/signup.css';\nimport registerIco from '../images/icons/registerIco.png';\nimport backgroundImg from '../images/icons/background.png';\nimport { handleLogin } from './bCaller/signupApi';\n    const wrapper = document.createElement('div');\n    const header = document.createElement('div');\n   export const middleInputsHolder = document.createElement('div');\n    const bottomInputsHolder = document.createElement('div');\n    const signupHolder = document.createElement('a');\n   export const emailGroup = document.createElement('div');\n    const pwdGroup = document.createElement('div');\n    const confirmPasswordGroup = document.createElement('div');\n    const emailLabel = document.createElement('label');\n    const passwordLabel = document.createElement('label');\n    const confirmPasswordLabel = document.createElement('label');\n    const logoImg = document.createElement('img');\n    const infoText = document.createElement('p');\n    const simpleNota = document.createElement('p');\n    const loginH1 = document.createElement('h1');\n   export  const email = document.createElement('input');\n    export const password = document.createElement('input');\n    export const confirmPassword = document.createElement('input');\n   export  const loginButton = document.createElement('button');\n    const forgotPwd = document.createElement('a');\n    const signupText = document.createElement('p');\n    const signupLink = document.createElement('a');\n    export const result = document.createElement('p');\n\n    export const loader = document.createElement('a');\n    loader.classList = \"loader\";\n    wrapper.classList = \"wrapper\";\n    header.classList = \"header\";\n    middleInputsHolder.classList = \"middleInputsHolder\";\n    bottomInputsHolder.classList = \"bottomInputsHolder\";\n    signupHolder.classList = \"signupHolder\";\n    logoImg.classList = \"logoImg\";\n    infoText.classList = \"infoText\";\n    simpleNota.classList = \"simpleNota\";\n    confirmPassword.classList = \"commonInput\";\n    email.classList = \"commonInput\";\n    password.classList = \"commonInput\";\n    loginButton.classList = \"loginButton\";\n    forgotPwd.classList = \"forgotPwd\";\n    signupLink.classList = \"signupLink\";\n    signupText.classList = \"signupText\";\n    loginH1.classList = \"loginH1\";\n    emailGroup.classList = \"emailGroup\";\n    pwdGroup.classList = \"pwdGroup\";\n    confirmPasswordGroup.classList = \"confirmPasswordGroup\";\n    emailLabel.classList = \"emailLabel\";\n    passwordLabel.classList = \"passwordLabel\";\n    confirmPasswordLabel.classList = \"confirmPasswordLabel\";\n    confirmPassword.placeholder = \"\";\n    confirmPassword.type = \"password\";\n    confirmPassword.id = \"confirmPassword\";\n    email.placeholder = \"\";\n    email.type = \"text\";\n    email.id = \"email\";\n    password.placeholder = \"\";\n    password.type = \"password\";\n    password.id = \"password\";\n    logoImg.src = registerIco;\n    loginButton.innerText = \"Sign Up\";\n    loginH1.innerText = \"Sign Up\";\n    signupLink.innerText = \"Login\";\n    signupLink.href = \"/login\";\n    signupText.innerText = \"Already have an account?\";\n    forgotPwd.innerText = \"Forgot Password?\";\n    forgotPwd.href = \"/forgot\";\n    infoText.innerText = \"Please Sign up to access cashly services\";\n    emailLabel.setAttribute('for', 'email');\n    passwordLabel.setAttribute('for', 'email');\n    emailLabel.innerText  = \"Email\";\n    passwordLabel.innerText = \"Password\";\n    confirmPasswordLabel.setAttribute('for', 'confirmPassword');\n    confirmPasswordLabel.innerText = \"Confirm Password\";\ndocument.body.style.backgroundImage = `url(${backgroundImg})`;\n    header.appendChild(logoImg);\n    header.appendChild(loginH1);\n    header.appendChild(infoText);\n    emailGroup.appendChild(email);\n    emailGroup.appendChild(emailLabel);\n    pwdGroup.appendChild(password);\n    pwdGroup.appendChild(passwordLabel);\n    confirmPasswordGroup.appendChild(confirmPassword);\n    confirmPasswordGroup.appendChild(confirmPasswordLabel);\n    middleInputsHolder.appendChild(emailGroup);\n    middleInputsHolder.appendChild(pwdGroup);\n    middleInputsHolder.appendChild(confirmPasswordGroup);\n    middleInputsHolder.appendChild(forgotPwd);\n    signupHolder.appendChild(signupText);\n    signupHolder.appendChild(signupLink);\n    bottomInputsHolder.appendChild(loginButton);\n    bottomInputsHolder.appendChild(signupHolder);\n    wrapper.appendChild(header);\n    wrapper.appendChild(middleInputsHolder);\n    wrapper.appendChild(bottomInputsHolder);\n    document.body.appendChild(wrapper);\n   \n    const validateForm = () => {\n        const emailValue = email.value.trim();\n        const passwordValue = password.value.trim();\n        const confirmPasswordValue = confirmPassword.value.trim();\n        \n        // Email validation\n        const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (!emailPattern.test(emailValue)) {\n          result.innerText = \"Please enter a valid email address.\";\n          result.style.color = 'red';\n          middleInputsHolder.insertBefore(result, emailGroup);\n          return false;\n        }\n      \n        // Password validation\n        if (passwordValue.length < 6) { // Example: Minimum 6 characters\n          result.innerText = \"Password must be at least 6 characters long.\";\n          result.style.color = 'red';\n          middleInputsHolder.insertBefore(result, emailGroup);\n          return false;\n        }\n      \n        // Confirm password validation\n        if (passwordValue !== confirmPasswordValue) {\n          result.innerText = \"Passwords do not match.\";\n          result.style.color = 'red';\n          middleInputsHolder.insertBefore(result, emailGroup);\n          return false;\n        }\n      \n        // Clear any previous result message if validation passes\n        result.innerText = \"\";\n        return true;\n      };\n      \n      loginButton.addEventListener('click', () => {\n        if (validateForm()) {\n          handleLogin(); // Proceed to handle login only if validation passes\n        }\n      });\n      ","import axios from \"axios\"; // Ensure axios is installed and imported\nimport { emailGroup, email, password, result, middleInputsHolder, loginButton, loader } from \"../signup\"; // Assuming `loginButton` and `loader` are exported from the same file\n\nexport const handleLogin = () => {\n  // Disable the login button and show loader\n  loginButton.disabled = true;\n  loginButton.innerText = \"\";\n  loginButton.appendChild(loader);\n\n  axios.post('https://jr.paswad.com/18082/enroll', {\n      email: email.value,\n      password: password.value,\n    })\n    .then(response => {\n      const data = response.data;\n\n      // Clear any previous messages\n      result.innerText = \"\";\n      result.style.color = '';\n\n      if (data.response.code === 0) {\n        // Update the result element with the error message and set the color to red\n        result.innerText = data.response.payload.message;\n        result.style.color = 'red';\n      } else {\n        // Handle success case, update result with a success message or data\n        result.innerText = \"Signup successful! Redirecting to login...\"; // Customize this message as needed\n        result.style.color = 'green';\n        middleInputsHolder.insertBefore(result, emailGroup);\n\n        // Redirect to /login after a brief delay\n        setTimeout(() => {\n          window.location.href = '/login'; // Redirect to the login page\n        }, 2000); // Adjust delay as needed (2000 ms = 2 seconds)\n      }\n\n      // Make the message disappear after 5 seconds\n      setTimeout(() => {\n        result.innerText = \"\"; // Clear the message\n        result.style.color = ''; // Reset the style\n        middleInputsHolder.removeChild(result);\n      }, 5000);\n    })\n    .catch(error => {\n      // Check if error response exists and retrieve the message\n      let errorMessage = \"An unexpected error occurred.\"; // Default message\n\n      if (error.response) {\n        // If the server responded with a status code outside the range of 2xx\n        errorMessage = error.response.data.response.payload.message || errorMessage;\n      }\n\n      result.innerText = errorMessage; // Display the error message\n      result.style.color = 'red';\n      middleInputsHolder.insertBefore(result, emailGroup);\n\n      // Clear the message after 5 seconds\n      setTimeout(() => {\n        result.innerText = \"\"; // Clear the message\n        result.style.color = ''; // Reset the style\n        middleInputsHolder.removeChild(result);\n      }, 5000);\n    })\n    .finally(() => {\n      // Re-enable the login button and remove the loader after the request completes\n      loginButton.disabled = false;\n      loginButton.innerHTML = 'Signup'; // Restore the original button text\n    });\n};\n"],"names":["wrapper","document","createElement","header","middleInputsHolder","bottomInputsHolder","signupHolder","emailGroup","pwdGroup","confirmPasswordGroup","emailLabel","passwordLabel","confirmPasswordLabel","logoImg","infoText","simpleNota","loginH1","email","password","confirmPassword","loginButton","forgotPwd","signupText","signupLink","result","loader","classList","placeholder","type","id","src","registerIco","innerText","href","setAttribute","body","style","backgroundImage","concat","backgroundImg","appendChild","addEventListener","emailValue","passwordValue","confirmPasswordValue","value","trim","test","length","color","insertBefore","disabled","axios","post","then","response","data","code","payload","message","setTimeout","window","location","removeChild","error","errorMessage","innerHTML"],"sourceRoot":""}